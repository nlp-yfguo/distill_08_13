+ source /home/yfguo/scripts/init_conda.sh
+++ /home/yfguo/miniconda3/bin/conda shell.bash hook
++ __conda_setup='export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ '[' 0 -eq 0 ']'
++ eval 'export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
+++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ dirname /home/yfguo/miniconda3/bin
+++ PATH=/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
+++ conda activate base
+++ local cmd=activate
+++ case "$cmd" in
+++ __conda_activate activate base
+++ '[' -n '' ']'
+++ local ask_conda
++++ PS1=
++++ __conda_exe shell.posix activate base
++++ /home/yfguo/miniconda3/bin/conda shell.posix activate base
+++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+++ eval 'PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++++ PS1='(base) '
++++ export PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export CONDA_PREFIX=/home/yfguo/miniconda3
++++ CONDA_PREFIX=/home/yfguo/miniconda3
++++ export CONDA_SHLVL=1
++++ CONDA_SHLVL=1
++++ export CONDA_DEFAULT_ENV=base
++++ CONDA_DEFAULT_ENV=base
++++ export 'CONDA_PROMPT_MODIFIER=(base) '
++++ CONDA_PROMPT_MODIFIER='(base) '
++++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ export _CE_M=
++++ _CE_M=
++++ export _CE_CONDA=
++++ _CE_CONDA=
++++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ __conda_hashr
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ hash -r
++ unset __conda_setup
+ conda activate Trans_base
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate Trans_base
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate Trans_base
++ /home/yfguo/miniconda3/bin/conda shell.posix activate Trans_base
+ ask_conda='PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+ eval 'PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++ PS1='(Trans_base) '
++ export PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=Trans_base
++ CONDA_DEFAULT_ENV=Trans_base
++ export 'CONDA_PROMPT_MODIFIER=(Trans_base) '
++ CONDA_PROMPT_MODIFIER='(Trans_base) '
++ export CONDA_PREFIX_1=/home/yfguo/miniconda3
++ CONDA_PREFIX_1=/home/yfguo/miniconda3
++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python train.py
Design models with seed: 666666
Init lr: 6.176323555016365e-08, Dev Loss/Error: 10.488 100.00
Initial model saved
Average loss over 21182358 tokens: 8.854
Average loss over 21251648 tokens: 7.027
Average loss over 21278497 tokens: 6.122
Average loss over 21314277 tokens: 5.242
Average loss over 21317447 tokens: 4.525
Average loss over 21326830 tokens: 4.153
Average loss over 11480445 tokens: 3.976
Epoch: 1, train loss: 5.818, valid loss/error: 3.672 44.99
New best model saved
Average loss over 21259795 tokens: 3.870
Average loss over 21255327 tokens: 3.782
Average loss over 21330787 tokens: 3.686
Average loss over 21313947 tokens: 3.643
Average loss over 21229896 tokens: 3.572
Average loss over 21303634 tokens: 3.522
Average loss over 11458116 tokens: 3.485
Epoch: 2, train loss: 3.663, valid loss/error: 3.195 38.38
New best model saved
Average loss over 21258912 tokens: 3.440
Average loss over 21292368 tokens: 3.435
Average loss over 21252344 tokens: 3.416
Average loss over 21257050 tokens: 3.400
Average loss over 21299809 tokens: 3.397
Average loss over 21297970 tokens: 3.354
Average loss over 11493049 tokens: 3.327
Epoch: 3, train loss: 3.401, valid loss/error: 3.037 35.94
New best model saved
Average loss over 21253646 tokens: 3.324
Average loss over 21269262 tokens: 3.317
Average loss over 21230361 tokens: 3.290
Average loss over 21286729 tokens: 3.302
Average loss over 21295205 tokens: 3.274
Average loss over 21271236 tokens: 3.277
Average loss over 11545063 tokens: 3.279
Epoch: 4, train loss: 3.296, valid loss/error: 2.972 34.95
New best model saved
Average loss over 21183266 tokens: 3.214
Average loss over 21275751 tokens: 3.244
Average loss over 21287960 tokens: 3.240
Average loss over 21270624 tokens: 3.239
Average loss over 21393630 tokens: 3.243
Average loss over 21272639 tokens: 3.236
Average loss over 11467632 tokens: 3.238
Epoch: 5, train loss: 3.236, valid loss/error: 2.928 34.31
New best model saved
Average loss over 21309007 tokens: 3.188
Average loss over 21271454 tokens: 3.194
Average loss over 21251066 tokens: 3.197
Average loss over 21187644 tokens: 3.191
Average loss over 21327023 tokens: 3.200
Average loss over 21307746 tokens: 3.199
Average loss over 11497562 tokens: 3.211
Epoch: 6, train loss: 3.196, valid loss/error: 2.893 33.79
New best model saved
Average loss over 21261657 tokens: 3.163
Average loss over 21198415 tokens: 3.160
Average loss over 21291412 tokens: 3.174
Average loss over 21287599 tokens: 3.166
Average loss over 21339678 tokens: 3.168
Average loss over 21279018 tokens: 3.168
Average loss over 11493723 tokens: 3.174
Epoch: 7, train loss: 3.167, valid loss/error: 2.873 33.40
New best model saved
Average loss over 21265040 tokens: 3.147
Average loss over 21258650 tokens: 3.135
Average loss over 21325033 tokens: 3.140
Average loss over 21287653 tokens: 3.143
Average loss over 21293991 tokens: 3.147
Average loss over 21277797 tokens: 3.164
Average loss over 11443338 tokens: 3.127
Epoch: 8, train loss: 3.144, valid loss/error: 2.853 33.15
New best model saved
Average loss over 21292954 tokens: 3.119
Average loss over 21310282 tokens: 3.125
Average loss over 21253288 tokens: 3.138
Average loss over 21202465 tokens: 3.124
Average loss over 21342961 tokens: 3.126
Average loss over 21255357 tokens: 3.126
Average loss over 11494195 tokens: 3.125
Epoch: 9, train loss: 3.126, valid loss/error: 2.841 32.97
New best model saved
Average loss over 21236151 tokens: 3.094
Average loss over 21258775 tokens: 3.113
Average loss over 21250522 tokens: 3.124
Average loss over 21283318 tokens: 3.111
Average loss over 21321522 tokens: 3.109
Average loss over 21320783 tokens: 3.126
Average loss over 11480431 tokens: 3.091
Epoch: 10, train loss: 3.111, valid loss/error: 2.838 32.94
New best model saved
Average loss over 21265807 tokens: 3.085
Average loss over 21241101 tokens: 3.086
Average loss over 21297489 tokens: 3.095
Average loss over 21356698 tokens: 3.113
Average loss over 21287726 tokens: 3.106
Average loss over 21253062 tokens: 3.093
Average loss over 11449619 tokens: 3.118
Epoch: 11, train loss: 3.098, valid loss/error: 2.820 32.73
New best model saved
Average loss over 21261708 tokens: 3.077
Average loss over 21314176 tokens: 3.086
Average loss over 21251199 tokens: 3.084
Average loss over 21302182 tokens: 3.094
Average loss over 21326749 tokens: 3.095
Average loss over 21273214 tokens: 3.094
Average loss over 11422274 tokens: 3.074
Epoch: 12, train loss: 3.087, valid loss/error: 2.816 32.60
New best model saved
Average loss over 21277897 tokens: 3.084
Average loss over 21318526 tokens: 3.061
Average loss over 21281817 tokens: 3.074
Average loss over 21241299 tokens: 3.093
Average loss over 21235092 tokens: 3.077
Average loss over 21282289 tokens: 3.069
Average loss over 11514582 tokens: 3.089
Epoch: 13, train loss: 3.078, valid loss/error: 2.813 32.64
New best model saved
Average loss over 21280309 tokens: 3.067
Average loss over 21199318 tokens: 3.051
Average loss over 21253076 tokens: 3.062
Average loss over 21336559 tokens: 3.066
Average loss over 21291430 tokens: 3.070
Average loss over 21235017 tokens: 3.083
Average loss over 11555793 tokens: 3.096
Epoch: 14, train loss: 3.069, valid loss/error: 2.802 32.40
New best model saved
Average loss over 21227014 tokens: 3.034
Average loss over 21283879 tokens: 3.061
Average loss over 21309771 tokens: 3.068
Average loss over 21324204 tokens: 3.071
Average loss over 21247472 tokens: 3.077
Average loss over 21268521 tokens: 3.053
Average loss over 11490641 tokens: 3.069
Epoch: 15, train loss: 3.061, valid loss/error: 2.800 32.33
New best model saved
Average loss over 21293185 tokens: 3.063
Average loss over 21292390 tokens: 3.036
Average loss over 21290687 tokens: 3.032
Average loss over 21251555 tokens: 3.070
Average loss over 21260237 tokens: 3.044
Average loss over 21244176 tokens: 3.068
Average loss over 11519272 tokens: 3.080
Epoch: 16, train loss: 3.055, valid loss/error: 2.800 32.24
New best model saved
Average loss over 21287781 tokens: 3.032
Average loss over 21354363 tokens: 3.047
Average loss over 21260857 tokens: 3.044
Average loss over 21221924 tokens: 3.043
Average loss over 21303031 tokens: 3.055
Average loss over 21211087 tokens: 3.056
Average loss over 11512459 tokens: 3.072
Epoch: 17, train loss: 3.048, valid loss/error: 2.792 32.24
New best model saved
Average loss over 21263062 tokens: 3.033
Average loss over 21266910 tokens: 3.032
Average loss over 21270478 tokens: 3.043
Average loss over 21183193 tokens: 3.035
Average loss over 21343084 tokens: 3.063
Average loss over 21309849 tokens: 3.038
Average loss over 11514926 tokens: 3.062
Epoch: 18, train loss: 3.043, valid loss/error: 2.789 32.14
New best model saved
Average loss over 21283876 tokens: 3.022
Average loss over 21213794 tokens: 3.031
Average loss over 21288307 tokens: 3.040
Average loss over 21305843 tokens: 3.044
Average loss over 21347329 tokens: 3.054
Average loss over 21220079 tokens: 3.036
Average loss over 11492274 tokens: 3.037
Epoch: 19, train loss: 3.038, valid loss/error: 2.790 32.21
Average loss over 21274768 tokens: 3.018
Average loss over 21291315 tokens: 3.026
Average loss over 12771487 tokens: 3.020
Epoch: 20, train loss: 3.022, valid loss/error: 2.787 32.10
New best model saved
Last training step reached
model saved
+ source /home/yfguo/scripts/init_conda.sh
+++ /home/yfguo/miniconda3/bin/conda shell.bash hook
++ __conda_setup='export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ '[' 0 -eq 0 ']'
++ eval 'export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
+++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ dirname /home/yfguo/miniconda3/bin
+++ PATH=/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
+++ conda activate base
+++ local cmd=activate
+++ case "$cmd" in
+++ __conda_activate activate base
+++ '[' -n '' ']'
+++ local ask_conda
++++ PS1=
++++ __conda_exe shell.posix activate base
++++ /home/yfguo/miniconda3/bin/conda shell.posix activate base
+++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+++ eval 'PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++++ PS1='(base) '
++++ export PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export CONDA_PREFIX=/home/yfguo/miniconda3
++++ CONDA_PREFIX=/home/yfguo/miniconda3
++++ export CONDA_SHLVL=1
++++ CONDA_SHLVL=1
++++ export CONDA_DEFAULT_ENV=base
++++ CONDA_DEFAULT_ENV=base
++++ export 'CONDA_PROMPT_MODIFIER=(base) '
++++ CONDA_PROMPT_MODIFIER='(base) '
++++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ export _CE_M=
++++ _CE_M=
++++ export _CE_CONDA=
++++ _CE_CONDA=
++++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ __conda_hashr
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ hash -r
++ unset __conda_setup
+ conda activate Trans_base
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate Trans_base
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate Trans_base
++ /home/yfguo/miniconda3/bin/conda shell.posix activate Trans_base
+ ask_conda='PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+ eval 'PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++ PS1='(Trans_base) '
++ export PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=Trans_base
++ CONDA_DEFAULT_ENV=Trans_base
++ export 'CONDA_PROMPT_MODIFIER=(Trans_base) '
++ CONDA_PROMPT_MODIFIER='(Trans_base) '
++ export CONDA_PREFIX_1=/home/yfguo/miniconda3
++ CONDA_PREFIX_1=/home/yfguo/miniconda3
++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python train_weight.py
Design models with seed: 666666
Load pre-trained model from: /home/yfguo/wmt16_trans/transformer_2023_7_8/expm/wmt16cache/rs/std/base/avg.h5
Init lr: 1e-05, Dev Loss/Error: 0.072 31.94
Average loss over 21182358 tokens: 0.047
Average loss over 21251648 tokens: 0.044
Average loss over 21278497 tokens: 0.044
Average loss over 21314277 tokens: 0.044
Average loss over 21317447 tokens: 0.044
Average loss over 21326830 tokens: 0.044
Average loss over 11480445 tokens: 0.044
Epoch: 1, train loss: 0.044, valid loss/error: 0.044 63.38
New best model saved
Average loss over 21259795 tokens: 0.044
Average loss over 21255327 tokens: 0.044
Average loss over 21330787 tokens: 0.044
Average loss over 21313947 tokens: 0.044
Average loss over 21229896 tokens: 0.044
Average loss over 21303634 tokens: 0.044
Average loss over 11458116 tokens: 0.044
Epoch: 2, train loss: 0.044, valid loss/error: 0.044 63.61
New best model saved
Average loss over 21258912 tokens: 0.044
Average loss over 21292368 tokens: 0.044
Average loss over 21252344 tokens: 0.044
Average loss over 21257050 tokens: 0.044
Average loss over 21299809 tokens: 0.044
Average loss over 21297970 tokens: 0.044
Average loss over 11493049 tokens: 0.044
Epoch: 3, train loss: 0.044, valid loss/error: 0.044 63.74
New best model saved
Average loss over 21253646 tokens: 0.044
Average loss over 21269262 tokens: 0.044
Average loss over 21230361 tokens: 0.044
Average loss over 21286729 tokens: 0.044
Average loss over 21295205 tokens: 0.044
Average loss over 21271236 tokens: 0.044
Average loss over 11545063 tokens: 0.044
Epoch: 4, train loss: 0.044, valid loss/error: 0.044 63.71
New best model saved
Average loss over 21183266 tokens: 0.044
Average loss over 21275751 tokens: 0.044
Average loss over 21287960 tokens: 0.044
Average loss over 21270624 tokens: 0.044
Average loss over 21393630 tokens: 0.044
Average loss over 21272639 tokens: 0.044
Average loss over 11467632 tokens: 0.044
Epoch: 5, train loss: 0.044, valid loss/error: 0.044 63.65
New best model saved
Average loss over 21309007 tokens: 0.044
Average loss over 21271454 tokens: 0.044
Average loss over 21251066 tokens: 0.044
Average loss over 21187644 tokens: 0.044
Average loss over 21327023 tokens: 0.044
Average loss over 21307746 tokens: 0.044
Average loss over 11497562 tokens: 0.044
Epoch: 6, train loss: 0.044, valid loss/error: 0.044 63.74
New best model saved
Average loss over 21261657 tokens: 0.044
Average loss over 21198415 tokens: 0.044
Average loss over 21291412 tokens: 0.044
Average loss over 21287599 tokens: 0.044
Average loss over 21339678 tokens: 0.044
Average loss over 21279018 tokens: 0.044
Average loss over 11493723 tokens: 0.044
Epoch: 7, train loss: 0.044, valid loss/error: 0.044 63.85
New best model saved
Average loss over 21265040 tokens: 0.044
Average loss over 21258650 tokens: 0.044
Average loss over 21325033 tokens: 0.044
Average loss over 21287653 tokens: 0.044
Average loss over 21293991 tokens: 0.044
Average loss over 21277797 tokens: 0.044
Average loss over 11443338 tokens: 0.044
Epoch: 8, train loss: 0.044, valid loss/error: 0.044 63.85
New best model saved
Average loss over 21292954 tokens: 0.044
Average loss over 21310282 tokens: 0.044
Average loss over 21253288 tokens: 0.044
Average loss over 21202465 tokens: 0.044
Average loss over 21342961 tokens: 0.044
Average loss over 21255357 tokens: 0.044
Average loss over 11494195 tokens: 0.044
Epoch: 9, train loss: 0.044, valid loss/error: 0.044 63.83
New best model saved
Average loss over 21236151 tokens: 0.044
Average loss over 21258775 tokens: 0.044
Average loss over 21250522 tokens: 0.044
Average loss over 21283318 tokens: 0.044
Average loss over 21321522 tokens: 0.044
Average loss over 21320783 tokens: 0.044
Average loss over 11480431 tokens: 0.044
Epoch: 10, train loss: 0.044, valid loss/error: 0.044 63.84
Average loss over 21265807 tokens: 0.044
Average loss over 21241101 tokens: 0.044
Average loss over 21297489 tokens: 0.044
Average loss over 21356698 tokens: 0.044
Average loss over 21287726 tokens: 0.044
Average loss over 21253062 tokens: 0.044
Average loss over 11449619 tokens: 0.044
Epoch: 11, train loss: 0.044, valid loss/error: 0.044 63.79
New best model saved
Average loss over 21261708 tokens: 0.044
Average loss over 21314176 tokens: 0.044
Average loss over 21251199 tokens: 0.044
Average loss over 21302182 tokens: 0.044
Average loss over 21326749 tokens: 0.044
Average loss over 21273214 tokens: 0.044
Average loss over 11422274 tokens: 0.044
Epoch: 12, train loss: 0.044, valid loss/error: 0.044 63.78
New best model saved
Average loss over 21277897 tokens: 0.044
Average loss over 21318526 tokens: 0.044
Average loss over 21281817 tokens: 0.044
Average loss over 21241299 tokens: 0.044
Average loss over 21235092 tokens: 0.044
Average loss over 21282289 tokens: 0.044
Average loss over 11514582 tokens: 0.044
Epoch: 13, train loss: 0.044, valid loss/error: 0.044 63.80
Average loss over 21280309 tokens: 0.044
Average loss over 21199318 tokens: 0.044
Average loss over 21253076 tokens: 0.044
Average loss over 21336559 tokens: 0.044
Average loss over 21291430 tokens: 0.044
Average loss over 21235017 tokens: 0.044
Average loss over 11555793 tokens: 0.044
Epoch: 14, train loss: 0.044, valid loss/error: 0.044 63.74
Average loss over 21227014 tokens: 0.044
Average loss over 21283879 tokens: 0.044
Average loss over 21309771 tokens: 0.044
Average loss over 21324204 tokens: 0.044
Average loss over 21247472 tokens: 0.044
Average loss over 21268521 tokens: 0.044
Average loss over 11490641 tokens: 0.044
Epoch: 15, train loss: 0.044, valid loss/error: 0.044 63.76
New best model saved
Average loss over 21293185 tokens: 0.044
Average loss over 21292390 tokens: 0.044
Average loss over 21290687 tokens: 0.044
Average loss over 21251555 tokens: 0.044
Average loss over 21260237 tokens: 0.044
Average loss over 21244176 tokens: 0.044
Average loss over 11519272 tokens: 0.044
Epoch: 16, train loss: 0.044, valid loss/error: 0.044 63.74
New best model saved
Average loss over 21287781 tokens: 0.044
Average loss over 21354363 tokens: 0.044
Average loss over 21260857 tokens: 0.044
Average loss over 21221924 tokens: 0.044
Average loss over 21303031 tokens: 0.044
Average loss over 21211087 tokens: 0.044
Average loss over 11512459 tokens: 0.044
Epoch: 17, train loss: 0.044, valid loss/error: 0.044 63.77
New best model saved
Average loss over 21263062 tokens: 0.044
Average loss over 21266910 tokens: 0.044
Average loss over 21270478 tokens: 0.044
Average loss over 21183193 tokens: 0.044
Average loss over 21343084 tokens: 0.044
Average loss over 21309849 tokens: 0.044
Average loss over 11514926 tokens: 0.044
Epoch: 18, train loss: 0.044, valid loss/error: 0.044 63.73
Average loss over 21283876 tokens: 0.044
Average loss over 21213794 tokens: 0.044
Average loss over 21288307 tokens: 0.044
Average loss over 21305843 tokens: 0.044
Average loss over 21347329 tokens: 0.044
Average loss over 21220079 tokens: 0.044
Average loss over 11492274 tokens: 0.044
Epoch: 19, train loss: 0.044, valid loss/error: 0.044 63.75
Average loss over 21274768 tokens: 0.044
Average loss over 21291315 tokens: 0.044
Average loss over 12771487 tokens: 0.044
Epoch: 20, train loss: 0.044, valid loss/error: 0.044 63.84
Last training step reached
model saved
+ source /home/yfguo/scripts/init_conda.sh
+++ /home/yfguo/miniconda3/bin/conda shell.bash hook
++ __conda_setup='export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ '[' 0 -eq 0 ']'
++ eval 'export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
+++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ dirname /home/yfguo/miniconda3/bin
+++ PATH=/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
+++ conda activate base
+++ local cmd=activate
+++ case "$cmd" in
+++ __conda_activate activate base
+++ '[' -n '' ']'
+++ local ask_conda
++++ PS1=
++++ __conda_exe shell.posix activate base
++++ /home/yfguo/miniconda3/bin/conda shell.posix activate base
+++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+++ eval 'PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++++ PS1='(base) '
++++ export PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export CONDA_PREFIX=/home/yfguo/miniconda3
++++ CONDA_PREFIX=/home/yfguo/miniconda3
++++ export CONDA_SHLVL=1
++++ CONDA_SHLVL=1
++++ export CONDA_DEFAULT_ENV=base
++++ CONDA_DEFAULT_ENV=base
++++ export 'CONDA_PROMPT_MODIFIER=(base) '
++++ CONDA_PROMPT_MODIFIER='(base) '
++++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ export _CE_M=
++++ _CE_M=
++++ export _CE_CONDA=
++++ _CE_CONDA=
++++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ __conda_hashr
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ hash -r
++ unset __conda_setup
+ conda activate Trans_base
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate Trans_base
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate Trans_base
++ /home/yfguo/miniconda3/bin/conda shell.posix activate Trans_base
+ ask_conda='PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+ eval 'PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++ PS1='(Trans_base) '
++ export PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=Trans_base
++ CONDA_DEFAULT_ENV=Trans_base
++ export 'CONDA_PROMPT_MODIFIER=(Trans_base) '
++ CONDA_PROMPT_MODIFIER='(Trans_base) '
++ export CONDA_PREFIX_1=/home/yfguo/miniconda3
++ CONDA_PREFIX_1=/home/yfguo/miniconda3
++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python train_distill.py
Design models with seed: 666666
Load steacher model from: /home/yfguo/wmt16_trans/transformer_2023_7_8/expm/wmt16cache/rs/std/daoshu/avg.h5
load student model from: /home/yfguo/wmt16_trans/transformer_2023_7_8/expm/wmt16cache/rs/std/base/avg.h5
Init lr: 1e-05, Dev Loss/Error: 3.892 31.94

Session terminated, killing shell...+ source /home/yfguo/scripts/init_conda.sh
+++ /home/yfguo/miniconda3/bin/conda shell.bash hook
++ __conda_setup='export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ '[' 0 -eq 0 ']'
++ eval 'export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
+++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ dirname /home/yfguo/miniconda3/bin
+++ PATH=/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
+++ conda activate base
+++ local cmd=activate
+++ case "$cmd" in
+++ __conda_activate activate base
+++ '[' -n '' ']'
+++ local ask_conda
++++ PS1=
++++ __conda_exe shell.posix activate base
++++ /home/yfguo/miniconda3/bin/conda shell.posix activate base
+++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+++ eval 'PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++++ PS1='(base) '
++++ export PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export CONDA_PREFIX=/home/yfguo/miniconda3
++++ CONDA_PREFIX=/home/yfguo/miniconda3
++++ export CONDA_SHLVL=1
++++ CONDA_SHLVL=1
++++ export CONDA_DEFAULT_ENV=base
++++ CONDA_DEFAULT_ENV=base
++++ export 'CONDA_PROMPT_MODIFIER=(base) '
++++ CONDA_PROMPT_MODIFIER='(base) '
++++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ export _CE_M=
++++ _CE_M=
++++ export _CE_CONDA=
++++ _CE_CONDA=
++++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ __conda_hashr
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ hash -r
++ unset __conda_setup
+ conda activate Trans_base
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate Trans_base
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate Trans_base
++ /home/yfguo/miniconda3/bin/conda shell.posix activate Trans_base
+ ask_conda='PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+ eval 'PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++ PS1='(Trans_base) '
++ export PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=Trans_base
++ CONDA_DEFAULT_ENV=Trans_base
++ export 'CONDA_PROMPT_MODIFIER=(Trans_base) '
++ CONDA_PROMPT_MODIFIER='(Trans_base) '
++ export CONDA_PREFIX_1=/home/yfguo/miniconda3
++ CONDA_PREFIX_1=/home/yfguo/miniconda3
++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python train_distill.py
Design models with seed: 666666
Load steacher model from: /home/yfguo/wmt16_trans/transformer_2023_7_8/expm/wmt16cache/rs/std/daoshu/avg.h5
load student model from: /home/yfguo/wmt16_trans/transformer_2023_7_8/expm/wmt16cache/rs/std/base/avg.h5
Init lr: 1e-05, Dev Loss/Error: 3.892 31.94
Traceback (most recent call last):
  File "/home/yfguo/wmt16_trans/transformer_2023_7_8/train_distill.py", line 428, in <module>
    terr, done_tokens, cur_checkid, remain_steps, _Dws = train(td, tl, vd, nvalid, stu_optimizer, stu_lrsch, teach_model,student_model, lossf,distilllossf,
  File "/home/yfguo/wmt16_trans/transformer_2023_7_8/train_distill.py", line 72, in train
    distill_loss.backward()
  File "/home/yfguo/miniconda3/envs/Trans_base/lib/python3.10/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/home/yfguo/miniconda3/envs/Trans_base/lib/python3.10/site-packages/torch/autograd/__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 738.00 MiB (GPU 0; 23.65 GiB total capacity; 15.46 GiB already allocated; 317.69 MiB free; 22.14 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
+ source /home/yfguo/scripts/init_conda.sh
+++ /home/yfguo/miniconda3/bin/conda shell.bash hook
++ __conda_setup='export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ '[' 0 -eq 0 ']'
++ eval 'export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
+++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ dirname /home/yfguo/miniconda3/bin
+++ PATH=/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
+++ conda activate base
+++ local cmd=activate
+++ case "$cmd" in
+++ __conda_activate activate base
+++ '[' -n '' ']'
+++ local ask_conda
++++ PS1=
++++ __conda_exe shell.posix activate base
++++ /home/yfguo/miniconda3/bin/conda shell.posix activate base
+++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+++ eval 'PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++++ PS1='(base) '
++++ export PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export CONDA_PREFIX=/home/yfguo/miniconda3
++++ CONDA_PREFIX=/home/yfguo/miniconda3
++++ export CONDA_SHLVL=1
++++ CONDA_SHLVL=1
++++ export CONDA_DEFAULT_ENV=base
++++ CONDA_DEFAULT_ENV=base
++++ export 'CONDA_PROMPT_MODIFIER=(base) '
++++ CONDA_PROMPT_MODIFIER='(base) '
++++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ export _CE_M=
++++ _CE_M=
++++ export _CE_CONDA=
++++ _CE_CONDA=
++++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ __conda_hashr
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ hash -r
++ unset __conda_setup
+ conda activate Trans_base
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate Trans_base
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate Trans_base
++ /home/yfguo/miniconda3/bin/conda shell.posix activate Trans_base
+ ask_conda='PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+ eval 'PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++ PS1='(Trans_base) '
++ export PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=Trans_base
++ CONDA_DEFAULT_ENV=Trans_base
++ export 'CONDA_PROMPT_MODIFIER=(Trans_base) '
++ CONDA_PROMPT_MODIFIER='(Trans_base) '
++ export CONDA_PREFIX_1=/home/yfguo/miniconda3
++ CONDA_PREFIX_1=/home/yfguo/miniconda3
++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python train_distill.py
Design models with seed: 666666
Load steacher model from: /home/yfguo/wmt16_trans/transformer_2023_7_8/expm/wmt16cache/rs/std/daoshu/avg.h5
load student model from: /home/yfguo/wmt16_trans/transformer_2023_7_8/expm/wmt16cache/rs/std/base/avg.h5
Init lr: 1e-05, Dev Loss/Error: 3.892 31.94
Traceback (most recent call last):
  File "/home/yfguo/wmt16_trans/transformer_2023_7_8/train_distill.py", line 428, in <module>
    terr, done_tokens, cur_checkid, remain_steps, _Dws = train(td, tl, vd, nvalid, stu_optimizer, stu_lrsch, teach_model,student_model, lossf,distilllossf,
  File "/home/yfguo/wmt16_trans/transformer_2023_7_8/train_distill.py", line 72, in train
    distill_loss.backward()
  File "/home/yfguo/miniconda3/envs/Trans_base/lib/python3.10/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/home/yfguo/miniconda3/envs/Trans_base/lib/python3.10/site-packages/torch/autograd/__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 738.00 MiB (GPU 0; 23.65 GiB total capacity; 15.46 GiB already allocated; 317.69 MiB free; 22.14 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
+ source /home/yfguo/scripts/init_conda.sh
+++ /home/yfguo/miniconda3/bin/conda shell.bash hook
++ __conda_setup='export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ '[' 0 -eq 0 ']'
++ eval 'export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
+++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ dirname /home/yfguo/miniconda3/bin
+++ PATH=/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
+++ conda activate base
+++ local cmd=activate
+++ case "$cmd" in
+++ __conda_activate activate base
+++ '[' -n '' ']'
+++ local ask_conda
++++ PS1=
++++ __conda_exe shell.posix activate base
++++ /home/yfguo/miniconda3/bin/conda shell.posix activate base
+++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+++ eval 'PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++++ PS1='(base) '
++++ export PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export CONDA_PREFIX=/home/yfguo/miniconda3
++++ CONDA_PREFIX=/home/yfguo/miniconda3
++++ export CONDA_SHLVL=1
++++ CONDA_SHLVL=1
++++ export CONDA_DEFAULT_ENV=base
++++ CONDA_DEFAULT_ENV=base
++++ export 'CONDA_PROMPT_MODIFIER=(base) '
++++ CONDA_PROMPT_MODIFIER='(base) '
++++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ export _CE_M=
++++ _CE_M=
++++ export _CE_CONDA=
++++ _CE_CONDA=
++++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ __conda_hashr
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ hash -r
++ unset __conda_setup
+ conda activate Trans_base
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate Trans_base
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate Trans_base
++ /home/yfguo/miniconda3/bin/conda shell.posix activate Trans_base
+ ask_conda='PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+ eval 'PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++ PS1='(Trans_base) '
++ export PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=Trans_base
++ CONDA_DEFAULT_ENV=Trans_base
++ export 'CONDA_PROMPT_MODIFIER=(Trans_base) '
++ CONDA_PROMPT_MODIFIER='(Trans_base) '
++ export CONDA_PREFIX_1=/home/yfguo/miniconda3
++ CONDA_PREFIX_1=/home/yfguo/miniconda3
++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python train_distill.py
Design models with seed: 666666
Load steacher model from: /home/yfguo/wmt16_trans/transformer_2023_7_8/expm/wmt16cache/rs/std/daoshu/avg.h5
load student model from: /home/yfguo/wmt16_trans/transformer_2023_7_8/expm/wmt16cache/rs/std/base/avg.h5
Init lr: 1e-05, Dev Loss/Error: 3.308 33.24
Average loss over 5171162 tokens: 1.965
Average loss over 5175187 tokens: 1.948
Average loss over 5172647 tokens: 1.940
Average loss over 5172676 tokens: 1.908
Average loss over 5163198 tokens: 1.898
Average loss over 5180444 tokens: 1.914
Average loss over 5153990 tokens: 1.893
+ source /home/yfguo/scripts/init_conda.sh
+++ /home/yfguo/miniconda3/bin/conda shell.bash hook
++ __conda_setup='export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ '[' 0 -eq 0 ']'
++ eval 'export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__conda_exe() (
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
+++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ dirname /home/yfguo/miniconda3/bin
+++ PATH=/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
+++ conda activate base
+++ local cmd=activate
+++ case "$cmd" in
+++ __conda_activate activate base
+++ '[' -n '' ']'
+++ local ask_conda
++++ PS1=
++++ __conda_exe shell.posix activate base
++++ /home/yfguo/miniconda3/bin/conda shell.posix activate base
+++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+++ eval 'PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++++ PS1='(base) '
++++ export PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export CONDA_PREFIX=/home/yfguo/miniconda3
++++ CONDA_PREFIX=/home/yfguo/miniconda3
++++ export CONDA_SHLVL=1
++++ CONDA_SHLVL=1
++++ export CONDA_DEFAULT_ENV=base
++++ CONDA_DEFAULT_ENV=base
++++ export 'CONDA_PROMPT_MODIFIER=(base) '
++++ CONDA_PROMPT_MODIFIER='(base) '
++++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ export _CE_M=
++++ _CE_M=
++++ export _CE_CONDA=
++++ _CE_CONDA=
++++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ __conda_hashr
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ hash -r
++ unset __conda_setup
+ conda activate Trans_base
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate Trans_base
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate Trans_base
++ /home/yfguo/miniconda3/bin/conda shell.posix activate Trans_base
+ ask_conda='PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+ eval 'PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++ PS1='(Trans_base) '
++ export PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=Trans_base
++ CONDA_DEFAULT_ENV=Trans_base
++ export 'CONDA_PROMPT_MODIFIER=(Trans_base) '
++ CONDA_PROMPT_MODIFIER='(Trans_base) '
++ export CONDA_PREFIX_1=/home/yfguo/miniconda3
++ CONDA_PREFIX_1=/home/yfguo/miniconda3
++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python train_distill.py
Design models with seed: 666666
Load steacher model from: /home/yfguo/wmt16_trans/transformer_2023_7_8/expm/wmt16cache/rs/std/daoshu/avg.h5
load student model from: /home/yfguo/wmt16_trans/transformer_2023_7_8/expm/wmt16cache/rs/std/base/avg.h5
Init lr: 1e-05, Dev Loss/Error: 3.308 33.24
Average loss over 5171162 tokens: 1.965
Average loss over 5175187 tokens: 1.948
Average loss over 5172647 tokens: 1.940
Average loss over 5172676 tokens: 1.908
Average loss over 5163198 tokens: 1.898
Average loss over 5180444 tokens: 1.914
Average loss over 5153990 tokens: 1.893
Average loss over 5167597 tokens: 1.887
Average loss over 5172335 tokens: 1.867
Average loss over 5176986 tokens: 1.897
Average loss over 5175162 tokens: 1.869
Average loss over 5183979 tokens: 1.860
Average loss over 5168009 tokens: 1.879
Average loss over 5170951 tokens: 1.861
Average loss over 5158742 tokens: 1.851
Average loss over 5163233 tokens: 1.832
Average loss over 5187706 tokens: 1.872
Average loss over 5155839 tokens: 1.840
Average loss over 5178185 tokens: 1.849
Average loss over 5175669 tokens: 1.855
Average loss over 5177820 tokens: 1.837
Average loss over 5163854 tokens: 1.840
Average loss over 5166147 tokens: 1.834
Average loss over 5175209 tokens: 1.820
Average loss over 5172571 tokens: 1.804
Average loss over 5167831 tokens: 1.838
Average loss over 4704373 tokens: 1.826
Epoch: 1, train loss: 1.870, valid loss/error: 1.569 32.54
New best model saved
Average loss over 5167304 tokens: 1.815
Average loss over 5162916 tokens: 1.800
Average loss over 5155952 tokens: 1.834
task.sh: 第 6 行：  1587 段错误               （核心已转储） python train_distill.py
+ source /home/yfguo/scripts/init_conda.sh
+++ /home/yfguo/miniconda3/bin/conda shell.bash hook
++ __conda_setup='export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ '[' 0 -eq 0 ']'
++ eval 'export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
+++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ dirname /home/yfguo/miniconda3/bin
+++ PATH=/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
+++ conda activate base
+++ local cmd=activate
+++ case "$cmd" in
+++ __conda_activate activate base
+++ '[' -n '' ']'
+++ local ask_conda
++++ PS1=
++++ __conda_exe shell.posix activate base
++++ __add_sys_prefix_to_path
++++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ SYSP=/home/yfguo/miniconda3/bin
+++++ dirname /home/yfguo/miniconda3/bin
++++ SYSP=/home/yfguo/miniconda3
++++ '[' -n '' ']'
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export PATH
++++ /home/yfguo/miniconda3/bin/conda shell.posix activate base
+++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+++ eval 'PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++++ PS1='(base) '
++++ export PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export CONDA_PREFIX=/home/yfguo/miniconda3
++++ CONDA_PREFIX=/home/yfguo/miniconda3
++++ export CONDA_SHLVL=1
++++ CONDA_SHLVL=1
++++ export CONDA_DEFAULT_ENV=base
++++ CONDA_DEFAULT_ENV=base
++++ export 'CONDA_PROMPT_MODIFIER=(base) '
++++ CONDA_PROMPT_MODIFIER='(base) '
++++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ export _CE_M=
++++ _CE_M=
++++ export _CE_CONDA=
++++ _CE_CONDA=
++++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ __conda_hashr
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ hash -r
++ unset __conda_setup
+ conda activate Trans_base
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate Trans_base
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate Trans_base
++ __add_sys_prefix_to_path
++ '[' -n '' ']'
+++ dirname /home/yfguo/miniconda3/bin/conda
++ SYSP=/home/yfguo/miniconda3/bin
+++ dirname /home/yfguo/miniconda3/bin
++ SYSP=/home/yfguo/miniconda3
++ '[' -n '' ']'
++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export PATH
++ /home/yfguo/miniconda3/bin/conda shell.posix activate Trans_base
+ ask_conda='PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\'''
+ eval 'PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\'''
++ PS1='(Trans_base) '
++ export PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=Trans_base
++ CONDA_DEFAULT_ENV=Trans_base
++ export 'CONDA_PROMPT_MODIFIER=(Trans_base) '
++ CONDA_PROMPT_MODIFIER='(Trans_base) '
++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ export CONDA_PREFIX_1=/home/yfguo/miniconda3
++ CONDA_PREFIX_1=/home/yfguo/miniconda3
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python train_distill.py
Design models with seed: 666666
Load steacher model from: /home/yfguo/transformer_For_distill/Trans_for_distill/expm/wmt16cache/rs/std/daoshu/avg.h5
load student model from: /home/yfguo/transformer_For_distill/Trans_for_distill/expm/wmt16cache/rs/std/base/avg.h5
Init lr: 1e-05, Dev Loss/Error: 3.839 33.34
Average loss over 10514554 tokens: 2.289
Average loss over 10542484 tokens: 2.189
Average loss over 10525216 tokens: 2.121
Average loss over 10529901 tokens: 2.080
Average loss over 10570728 tokens: 2.055
Average loss over 10514814 tokens: 2.042
Average loss over 10539634 tokens: 2.026
Average loss over 10503578 tokens: 2.023
Average loss over 10571137 tokens: 2.008
Average loss over 10538922 tokens: 1.990
Average loss over 10544082 tokens: 1.991
Average loss over 10529841 tokens: 1.972
Average loss over 10532225 tokens: 1.971
Average loss over 2194386 tokens: 1.987
Epoch: 1, train loss: 2.057, valid loss/error: 1.692 32.74
New best model saved
Average loss over 10532181 tokens: 1.973
Average loss over 10542521 tokens: 1.948
Average loss over 10542676 tokens: 1.961
Average loss over 10515587 tokens: 1.960
Average loss over 10521838 tokens: 1.951
Average loss over 10526322 tokens: 1.954
Traceback (most recent call last):
  File "/home/yfguo/transformer_For_distill/Trans_for_distill/train_distill.py", line 428, in <module>
    terr, done_tokens, cur_checkid, remain_steps, _Dws = train(td, tl, vd, nvalid, stu_optimizer, stu_lrsch, teach_model,student_model, lossf,distilllossf,
  File "/home/yfguo/transformer_For_distill/Trans_for_distill/train_distill.py", line 63, in train
    distill_loss = distilllossf(lossf,teach_out_softmax_withoutT,stu_out_softmax_withoutT,
  File "/home/yfguo/miniconda3/envs/Trans_base/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/yfguo/transformer_For_distill/Trans_for_distill/loss/base.py", line 65, in forward
    distill_loss = self.softloss(stu_out_sotfmax_byT.log(), teach_out_sotfmax_byT.masked_fill(_mask, 0.0))
  File "/home/yfguo/miniconda3/envs/Trans_base/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/yfguo/miniconda3/envs/Trans_base/lib/python3.10/site-packages/torch/nn/modules/loss.py", line 471, in forward
    return F.kl_div(input, target, reduction=self.reduction, log_target=self.log_target)
  File "/home/yfguo/miniconda3/envs/Trans_base/lib/python3.10/site-packages/torch/nn/functional.py", line 2928, in kl_div
    reduced = torch.kl_div(input, target, reduction_enum, log_target=log_target)
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 616.00 MiB (GPU 0; 23.69 GiB total capacity; 11.36 GiB already allocated; 576.06 MiB free; 14.42 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
+ source /home/yfguo/scripts/init_conda.sh
+++ /home/yfguo/miniconda3/bin/conda shell.bash hook
++ __conda_setup='export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ '[' 0 -eq 0 ']'
++ eval 'export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
+++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ dirname /home/yfguo/miniconda3/bin
+++ PATH=/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
+++ conda activate base
+++ local cmd=activate
+++ case "$cmd" in
+++ __conda_activate activate base
+++ '[' -n '' ']'
+++ local ask_conda
++++ PS1=
++++ __conda_exe shell.posix activate base
++++ __add_sys_prefix_to_path
++++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ SYSP=/home/yfguo/miniconda3/bin
+++++ dirname /home/yfguo/miniconda3/bin
++++ SYSP=/home/yfguo/miniconda3
++++ '[' -n '' ']'
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export PATH
++++ /home/yfguo/miniconda3/bin/conda shell.posix activate base
+++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+++ eval 'PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++++ PS1='(base) '
++++ export PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export CONDA_PREFIX=/home/yfguo/miniconda3
++++ CONDA_PREFIX=/home/yfguo/miniconda3
++++ export CONDA_SHLVL=1
++++ CONDA_SHLVL=1
++++ export CONDA_DEFAULT_ENV=base
++++ CONDA_DEFAULT_ENV=base
++++ export 'CONDA_PROMPT_MODIFIER=(base) '
++++ CONDA_PROMPT_MODIFIER='(base) '
++++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ export _CE_M=
++++ _CE_M=
++++ export _CE_CONDA=
++++ _CE_CONDA=
++++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ __conda_hashr
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ hash -r
++ unset __conda_setup
+ conda activate Trans_base
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate Trans_base
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate Trans_base
++ __add_sys_prefix_to_path
++ '[' -n '' ']'
+++ dirname /home/yfguo/miniconda3/bin/conda
++ SYSP=/home/yfguo/miniconda3/bin
+++ dirname /home/yfguo/miniconda3/bin
++ SYSP=/home/yfguo/miniconda3
++ '[' -n '' ']'
++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export PATH
++ /home/yfguo/miniconda3/bin/conda shell.posix activate Trans_base
+ ask_conda='PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\'''
+ eval 'PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\'''
++ PS1='(Trans_base) '
++ export PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=Trans_base
++ CONDA_DEFAULT_ENV=Trans_base
++ export 'CONDA_PROMPT_MODIFIER=(Trans_base) '
++ CONDA_PROMPT_MODIFIER='(Trans_base) '
++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ export CONDA_PREFIX_1=/home/yfguo/miniconda3
++ CONDA_PREFIX_1=/home/yfguo/miniconda3
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python train_distill.py
Design models with seed: 666666
Load steacher model from: /home/yfguo/transformer_For_distill/Trans_for_distill/expm/wmt16cache/rs/std/daoshu/avg.h5
load student model from: /home/yfguo/transformer_For_distill/Trans_for_distill/expm/wmt16cache/rs/std/base/avg.h5
Init lr: 1e-05, Dev Loss/Error: 3.839 33.34
Average loss over 10514554 tokens: 2.289
Average loss over 10542484 tokens: 2.189
Average loss over 10525216 tokens: 2.121
Average loss over 10529901 tokens: 2.080
Average loss over 10570728 tokens: 2.055
Average loss over 10514814 tokens: 2.042
Average loss over 10539634 tokens: 2.026
Average loss over 10503578 tokens: 2.023
Average loss over 10571137 tokens: 2.008
Average loss over 10538922 tokens: 1.990
Average loss over 10544082 tokens: 1.991
Average loss over 10529841 tokens: 1.972
Average loss over 10532225 tokens: 1.971
Average loss over 2194386 tokens: 1.987
Epoch: 1, train loss: 2.057, valid loss/error: 1.692 32.74
New best model saved
Average loss over 10532181 tokens: 1.973
Average loss over 10542521 tokens: 1.948
Average loss over 10542676 tokens: 1.961
Average loss over 10515587 tokens: 1.960
Average loss over 10521838 tokens: 1.951
Average loss over 10526322 tokens: 1.954
Average loss over 10551403 tokens: 1.942
Average loss over 10509510 tokens: 1.940
Average loss over 10527200 tokens: 1.924
Average loss over 10532204 tokens: 1.937
Average loss over 10577636 tokens: 1.928
Average loss over 10536938 tokens: 1.943
Average loss over 10557140 tokens: 1.916
Average loss over 2178346 tokens: 1.941
Epoch: 2, train loss: 1.945, valid loss/error: 1.645 32.38
New best model saved
Average loss over 10532558 tokens: 1.931
Average loss over 10535815 tokens: 1.934
Average loss over 10534194 tokens: 1.919
Average loss over 10555879 tokens: 1.929
Average loss over 10530420 tokens: 1.911
Average loss over 10541473 tokens: 1.911
Average loss over 10525632 tokens: 1.894
Average loss over 10543203 tokens: 1.919
Average loss over 10510982 tokens: 1.905
Average loss over 10563056 tokens: 1.914
Average loss over 10504428 tokens: 1.904
Average loss over 10540283 tokens: 1.915
Average loss over 10551454 tokens: 1.913
Average loss over 2182125 tokens: 1.870
Epoch: 3, train loss: 1.915, valid loss/error: 1.625 32.23
New best model saved
Average loss over 10548993 tokens: 1.899
Average loss over 10548055 tokens: 1.911
Average loss over 10537538 tokens: 1.897
Average loss over 10509044 tokens: 1.876
Average loss over 10562099 tokens: 1.905
Average loss over 10548464 tokens: 1.901
Average loss over 10500812 tokens: 1.916
Average loss over 10526401 tokens: 1.891
Average loss over 10527079 tokens: 1.896
Average loss over 10534535 tokens: 1.923
Average loss over 10550644 tokens: 1.881
Average loss over 10554038 tokens: 1.911
Average loss over 10535805 tokens: 1.897
Average loss over 2167995 tokens: 1.884
Epoch: 4, train loss: 1.900, valid loss/error: 1.622 32.12
New best model saved
Average loss over 10534161 tokens: 1.887
Average loss over 10532752 tokens: 1.886
Average loss over 10522275 tokens: 1.895
Average loss over 10538424 tokens: 1.881
Average loss over 10537406 tokens: 1.892
Average loss over 10539117 tokens: 1.888
Average loss over 10503822 tokens: 1.894
Average loss over 10504440 tokens: 1.878
Average loss over 10532934 tokens: 1.891
Average loss over 10550931 tokens: 1.898
Average loss over 10552379 tokens: 1.906
Average loss over 10525549 tokens: 1.878
Average loss over 10580579 tokens: 1.899
Average loss over 2196733 tokens: 1.934
Epoch: 5, train loss: 1.891, valid loss/error: 1.611 32.02
New best model saved
Average loss over 10570501 tokens: 1.904
Average loss over 10512419 tokens: 1.880
Average loss over 10539465 tokens: 1.880
Average loss over 10554404 tokens: 1.878
Average loss over 10564794 tokens: 1.899
Average loss over 10515540 tokens: 1.880
Average loss over 10519021 tokens: 1.870
Average loss over 10554816 tokens: 1.898
Average loss over 10560522 tokens: 1.889
Average loss over 10518115 tokens: 1.889
Average loss over 10532635 tokens: 1.873
Average loss over 10488490 tokens: 1.869
Average loss over 10541039 tokens: 1.881
Average loss over 2179741 tokens: 1.902
Epoch: 6, train loss: 1.884, valid loss/error: 1.603 31.94
New best model saved
Average loss over 10547068 tokens: 1.890
Average loss over 10539689 tokens: 1.879
Average loss over 10514592 tokens: 1.898
Average loss over 10544132 tokens: 1.898
Average loss over 10514919 tokens: 1.869
Average loss over 10495480 tokens: 1.870
Average loss over 10572283 tokens: 1.885
Average loss over 10504986 tokens: 1.854
Average loss over 10556673 tokens: 1.895
Average loss over 10498253 tokens: 1.868
Average loss over 10573796 tokens: 1.880
Average loss over 10562270 tokens: 1.869
Average loss over 10520916 tokens: 1.865
Average loss over 2206445 tokens: 1.927
Epoch: 7, train loss: 1.879, valid loss/error: 1.605 31.96
Average loss over 10550220 tokens: 1.891
Average loss over 10561239 tokens: 1.887
Average loss over 10537947 tokens: 1.876
Average loss over 10562825 tokens: 1.871
Average loss over 10537692 tokens: 1.862
Average loss over 10489534 tokens: 1.878
Average loss over 10548543 tokens: 1.874
Average loss over 10491368 tokens: 1.865
Average loss over 10515385 tokens: 1.864
Average loss over 10569330 tokens: 1.873
Average loss over 10532880 tokens: 1.882
Average loss over 10518114 tokens: 1.875
Average loss over 10552673 tokens: 1.880
Average loss over 2183752 tokens: 1.877
Epoch: 8, train loss: 1.875, valid loss/error: 1.592 31.94
New best model saved
Average loss over 10520702 tokens: 1.874
Average loss over 10513407 tokens: 1.879
Average loss over 10522290 tokens: 1.870
Average loss over 10483856 tokens: 1.845
Average loss over 10557326 tokens: 1.866
Average loss over 10562485 tokens: 1.862
Average loss over 10522737 tokens: 1.883
Average loss over 10541996 tokens: 1.876
Average loss over 10523503 tokens: 1.864
Average loss over 10514678 tokens: 1.863
Average loss over 10567100 tokens: 1.888
Average loss over 10557642 tokens: 1.886
Average loss over 10561295 tokens: 1.874
Average loss over 2202485 tokens: 1.883
Epoch: 9, train loss: 1.872, valid loss/error: 1.593 31.86
New best model saved
Average loss over 10485903 tokens: 1.865
Average loss over 10610425 tokens: 1.859
Average loss over 10514724 tokens: 1.858
Average loss over 10518084 tokens: 1.868
Average loss over 10559266 tokens: 1.856
Average loss over 10522231 tokens: 1.893
Average loss over 10511142 tokens: 1.860
Average loss over 10543166 tokens: 1.854
Average loss over 10559159 tokens: 1.876
Average loss over 10518971 tokens: 1.867
Average loss over 10536121 tokens: 1.874
Average loss over 10552138 tokens: 1.886
Average loss over 10520134 tokens: 1.869
Average loss over 2200038 tokens: 1.890
Epoch: 10, train loss: 1.868, valid loss/error: 1.588 31.86
New best model saved
Average loss over 10519700 tokens: 1.870
Average loss over 10540267 tokens: 1.883
Average loss over 10545415 tokens: 1.861
Average loss over 10532810 tokens: 1.859
Average loss over 10542855 tokens: 1.854
Average loss over 10542633 tokens: 1.868
Average loss over 10522376 tokens: 1.864
Average loss over 10513569 tokens: 1.865
Average loss over 10518101 tokens: 1.859
Average loss over 10538316 tokens: 1.863
Average loss over 10563040 tokens: 1.879
Average loss over 10551302 tokens: 1.853
Average loss over 10531075 tokens: 1.881
Average loss over 2190043 tokens: 1.849
Epoch: 11, train loss: 1.866, valid loss/error: 1.590 31.82
New best model saved
Average loss over 10540010 tokens: 1.859
Average loss over 10523058 tokens: 1.857
Average loss over 10533857 tokens: 1.864
Average loss over 10555283 tokens: 1.856
Average loss over 10557713 tokens: 1.881
Average loss over 10529376 tokens: 1.858
Average loss over 10512551 tokens: 1.863
Average loss over 10539058 tokens: 1.871
Average loss over 10523644 tokens: 1.853
Average loss over 10554632 tokens: 1.878
Average loss over 10521472 tokens: 1.844
Average loss over 10549649 tokens: 1.864
Average loss over 10538062 tokens: 1.875
Average loss over 2173137 tokens: 1.856
Epoch: 12, train loss: 1.863, valid loss/error: 1.589 31.81
New best model saved
Average loss over 10498911 tokens: 1.835
Average loss over 10535902 tokens: 1.844
Average loss over 10529825 tokens: 1.843
Average loss over 10532156 tokens: 1.852
Average loss over 10516016 tokens: 1.842
Average loss over 10544420 tokens: 1.873
Average loss over 10558450 tokens: 1.883
Average loss over 10514659 tokens: 1.883
Average loss over 10598891 tokens: 1.892
Average loss over 10544780 tokens: 1.871
Average loss over 10501363 tokens: 1.869
Average loss over 10568466 tokens: 1.860
Average loss over 10515323 tokens: 1.853
Average loss over 2192340 tokens: 1.832
Epoch: 13, train loss: 1.861, valid loss/error: 1.589 31.81
Average loss over 10533355 tokens: 1.859
Average loss over 10528381 tokens: 1.843
Average loss over 10536104 tokens: 1.846
Average loss over 10523951 tokens: 1.851
Average loss over 10545931 tokens: 1.870
Average loss over 10497361 tokens: 1.864
Average loss over 10543211 tokens: 1.866
Average loss over 10558850 tokens: 1.862
Average loss over 10549107 tokens: 1.857
Average loss over 10531202 tokens: 1.853
Average loss over 10537833 tokens: 1.877
Average loss over 10515488 tokens: 1.852
Average loss over 10562849 tokens: 1.869
Average loss over 2187879 tokens: 1.849
Epoch: 14, train loss: 1.859, valid loss/error: 1.584 31.79
New best model saved
Average loss over 10569721 tokens: 1.863
Average loss over 10562206 tokens: 1.865
Average loss over 10528834 tokens: 1.836
Average loss over 10520753 tokens: 1.850
Average loss over 10539881 tokens: 1.847
Average loss over 10513146 tokens: 1.872
Average loss over 10524616 tokens: 1.867
Average loss over 10543829 tokens: 1.864
Average loss over 10505396 tokens: 1.835
Average loss over 10528326 tokens: 1.865
Average loss over 10518618 tokens: 1.861
Average loss over 10542167 tokens: 1.859
Average loss over 10552731 tokens: 1.850
Average loss over 2201278 tokens: 1.902
Epoch: 15, train loss: 1.857, valid loss/error: 1.583 31.77
New best model saved
Average loss over 10515433 tokens: 1.840
Average loss over 10511218 tokens: 1.855
Average loss over 10553305 tokens: 1.860
Average loss over 10531191 tokens: 1.855
Average loss over 10529572 tokens: 1.857
Average loss over 10561068 tokens: 1.857
Average loss over 10567158 tokens: 1.861
Average loss over 10526141 tokens: 1.845
Average loss over 10501530 tokens: 1.833
Average loss over 10539476 tokens: 1.854
Average loss over 10546228 tokens: 1.854
Average loss over 10559984 tokens: 1.879
Average loss over 10530801 tokens: 1.873
Average loss over 2178397 tokens: 1.851
Epoch: 16, train loss: 1.856, valid loss/error: 1.581 31.80
New best model saved
Average loss over 10519218 tokens: 1.850
Average loss over 10513050 tokens: 1.831
Average loss over 10519340 tokens: 1.843
Average loss over 10543656 tokens: 1.860
Average loss over 10530128 tokens: 1.864
Average loss over 10563845 tokens: 1.851
Average loss over 10530178 tokens: 1.825
Average loss over 10531208 tokens: 1.859
Average loss over 10540486 tokens: 1.860
Average loss over 10569008 tokens: 1.864
Average loss over 10494969 tokens: 1.859
Average loss over 10545409 tokens: 1.867
Average loss over 10551981 tokens: 1.866
Average loss over 2199026 tokens: 1.870
Epoch: 17, train loss: 1.854, valid loss/error: 1.578 31.73
New best model saved
Average loss over 10529836 tokens: 1.850
Average loss over 10582938 tokens: 1.870
Average loss over 10537764 tokens: 1.852
Average loss over 10543262 tokens: 1.840
Average loss over 10554661 tokens: 1.857
Average loss over 10552035 tokens: 1.852
Average loss over 10501601 tokens: 1.861
Average loss over 10544647 tokens: 1.859
Average loss over 10568824 tokens: 1.856
Average loss over 10501888 tokens: 1.844
Average loss over 10530533 tokens: 1.853
Average loss over 10517233 tokens: 1.851
Average loss over 10507610 tokens: 1.846
Average loss over 2178670 tokens: 1.818
Epoch: 18, train loss: 1.852, valid loss/error: 1.582 31.76
Average loss over 10504097 tokens: 1.830
Average loss over 10504706 tokens: 1.832
Average loss over 10524003 tokens: 1.845
Average loss over 10563768 tokens: 1.844
Average loss over 10521993 tokens: 1.853
Average loss over 10534940 tokens: 1.852
Average loss over 10561417 tokens: 1.868
Average loss over 10510120 tokens: 1.865
Average loss over 10539332 tokens: 1.845
Average loss over 6872272 tokens: 1.855
Epoch: 19, train loss: 1.849, valid loss/error: 1.580 31.77
Last training step reached
model saved
+ source /home/yfguo/scripts/init_conda.sh
+++ /home/yfguo/miniconda3/bin/conda shell.bash hook
++ __conda_setup='export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ '[' 0 -eq 0 ']'
++ eval 'export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
+++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ dirname /home/yfguo/miniconda3/bin
+++ PATH=/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
+++ conda activate base
+++ local cmd=activate
+++ case "$cmd" in
+++ __conda_activate activate base
+++ '[' -n '' ']'
+++ local ask_conda
++++ PS1=
++++ __conda_exe shell.posix activate base
++++ __add_sys_prefix_to_path
++++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ SYSP=/home/yfguo/miniconda3/bin
+++++ dirname /home/yfguo/miniconda3/bin
++++ SYSP=/home/yfguo/miniconda3
++++ '[' -n '' ']'
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export PATH
++++ /home/yfguo/miniconda3/bin/conda shell.posix activate base
+++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+++ eval 'PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++++ PS1='(base) '
++++ export PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export CONDA_PREFIX=/home/yfguo/miniconda3
++++ CONDA_PREFIX=/home/yfguo/miniconda3
++++ export CONDA_SHLVL=1
++++ CONDA_SHLVL=1
++++ export CONDA_DEFAULT_ENV=base
++++ CONDA_DEFAULT_ENV=base
++++ export 'CONDA_PROMPT_MODIFIER=(base) '
++++ CONDA_PROMPT_MODIFIER='(base) '
++++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ export _CE_M=
++++ _CE_M=
++++ export _CE_CONDA=
++++ _CE_CONDA=
++++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ __conda_hashr
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ hash -r
++ unset __conda_setup
+ conda activate Trans_base
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate Trans_base
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate Trans_base
++ __add_sys_prefix_to_path
++ '[' -n '' ']'
+++ dirname /home/yfguo/miniconda3/bin/conda
++ SYSP=/home/yfguo/miniconda3/bin
+++ dirname /home/yfguo/miniconda3/bin
++ SYSP=/home/yfguo/miniconda3
++ '[' -n '' ']'
++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export PATH
++ /home/yfguo/miniconda3/bin/conda shell.posix activate Trans_base
+ ask_conda='PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\'''
+ eval 'PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\'''
++ PS1='(Trans_base) '
++ export PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=Trans_base
++ CONDA_DEFAULT_ENV=Trans_base
++ export 'CONDA_PROMPT_MODIFIER=(Trans_base) '
++ CONDA_PROMPT_MODIFIER='(Trans_base) '
++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ export CONDA_PREFIX_1=/home/yfguo/miniconda3
++ CONDA_PREFIX_1=/home/yfguo/miniconda3
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python train_distill.py
Design models with seed: 666666
Load steacher model from: /home/yfguo/transformer_For_distill/Trans_for_distill/expm/wmt16cache/rs_6144/std/weight_10/avg.h5
load student model from: /home/yfguo/transformer_For_distill/Trans_for_distill/expm/wmt16cache/rs/std/base/avg.h5
Init lr: 1e-05, Dev Loss/Error: 3.588 33.34
Average loss over 10514554 tokens: 2.244
Average loss over 10542484 tokens: 2.155
Average loss over 10525216 tokens: 2.081
Average loss over 10529901 tokens: 2.039
Average loss over 10570728 tokens: 2.015
Average loss over 10514814 tokens: 2.002
Average loss over 10539634 tokens: 1.987
Average loss over 10503578 tokens: 1.985
Average loss over 10571137 tokens: 1.971
Average loss over 10538922 tokens: 1.953
Average loss over 10544082 tokens: 1.955
Average loss over 10529841 tokens: 1.936
Average loss over 10532225 tokens: 1.935
Average loss over 2194386 tokens: 1.952
Epoch: 1, train loss: 2.019, valid loss/error: 1.639 32.71
New best model saved
Average loss over 10532181 tokens: 1.938
Average loss over 10542521 tokens: 1.914
Average loss over 10542676 tokens: 1.926
Average loss over 10515587 tokens: 1.926
Average loss over 10521838 tokens: 1.917
Average loss over 10526322 tokens: 1.920
Average loss over 10551403 tokens: 1.909
Average loss over 10509510 tokens: 1.907
Average loss over 10527200 tokens: 1.891
Average loss over 10532204 tokens: 1.905
Average loss over 10577636 tokens: 1.896
Average loss over 10536938 tokens: 1.911
Average loss over 10557140 tokens: 1.884
Average loss over 2178346 tokens: 1.909
Epoch: 2, train loss: 1.911, valid loss/error: 1.598 32.35
New best model saved
Average loss over 10532558 tokens: 1.899
Average loss over 10535815 tokens: 1.902
Average loss over 10534194 tokens: 1.887
Average loss over 10555879 tokens: 1.897
Average loss over 10530420 tokens: 1.880
Average loss over 10541473 tokens: 1.880
Average loss over 10525632 tokens: 1.863
Average loss over 10543203 tokens: 1.888
Average loss over 10510982 tokens: 1.875
Average loss over 10563056 tokens: 1.883
Average loss over 10504428 tokens: 1.874
Average loss over 10540283 tokens: 1.884
Average loss over 10551454 tokens: 1.882
Average loss over 2182125 tokens: 1.839
Epoch: 3, train loss: 1.883, valid loss/error: 1.591 32.17
New best model saved
Average loss over 10548993 tokens: 1.869
Average loss over 10548055 tokens: 1.880
Average loss over 10537538 tokens: 1.867
Average loss over 10509044 tokens: 1.847
Average loss over 10562099 tokens: 1.875
Average loss over 10548464 tokens: 1.871
Average loss over 10500812 tokens: 1.886
Average loss over 10526401 tokens: 1.862
Average loss over 10527079 tokens: 1.866
Average loss over 10534535 tokens: 1.893
Average loss over 10550644 tokens: 1.852
Average loss over 10554038 tokens: 1.881
Average loss over 10535805 tokens: 1.868
Average loss over 2167995 tokens: 1.855
Epoch: 4, train loss: 1.870, valid loss/error: 1.582 32.06
New best model saved
Average loss over 10534161 tokens: 1.858
Average loss over 10532752 tokens: 1.857
Average loss over 10522275 tokens: 1.866
Average loss over 10538424 tokens: 1.852
Average loss over 10537406 tokens: 1.863
Average loss over 10539117 tokens: 1.858
Average loss over 10503822 tokens: 1.865
Average loss over 10504440 tokens: 1.850
Average loss over 10532934 tokens: 1.862
Average loss over 10550931 tokens: 1.870
Average loss over 10552379 tokens: 1.877
Average loss over 10525549 tokens: 1.850
Average loss over 10580579 tokens: 1.871
Average loss over 2196733 tokens: 1.906
Epoch: 5, train loss: 1.862, valid loss/error: 1.583 31.97
New best model saved
Average loss over 10570501 tokens: 1.876
Average loss over 10512419 tokens: 1.852
Average loss over 10539465 tokens: 1.853
Average loss over 10554404 tokens: 1.849
Average loss over 10564794 tokens: 1.871
Average loss over 10515540 tokens: 1.853
Average loss over 10519021 tokens: 1.842
Average loss over 10554816 tokens: 1.870
Average loss over 10560522 tokens: 1.861
Average loss over 10518115 tokens: 1.861
Average loss over 10532635 tokens: 1.846
Average loss over 10488490 tokens: 1.842
Average loss over 10541039 tokens: 1.853
Average loss over 2179741 tokens: 1.874
Epoch: 6, train loss: 1.856, valid loss/error: 1.579 31.88
New best model saved
Average loss over 10547068 tokens: 1.863
Average loss over 10539689 tokens: 1.852
Average loss over 10514592 tokens: 1.870
Average loss over 10544132 tokens: 1.870
Average loss over 10514919 tokens: 1.841
Average loss over 10495480 tokens: 1.843
Average loss over 10572283 tokens: 1.857
Average loss over 10504986 tokens: 1.827
Average loss over 10556673 tokens: 1.868
Average loss over 10498253 tokens: 1.841
Average loss over 10573796 tokens: 1.853
Average loss over 10562270 tokens: 1.842
Average loss over 10520916 tokens: 1.838
Average loss over 2206445 tokens: 1.900
Epoch: 7, train loss: 1.852, valid loss/error: 1.576 31.92
New best model saved
Average loss over 10550220 tokens: 1.863
Average loss over 10561239 tokens: 1.860
Average loss over 10537947 tokens: 1.848
Average loss over 10562825 tokens: 1.844
Average loss over 10537692 tokens: 1.835
Average loss over 10489534 tokens: 1.852
Average loss over 10548543 tokens: 1.847
Average loss over 10491368 tokens: 1.838
Average loss over 10515385 tokens: 1.837
Average loss over 10569330 tokens: 1.847
Average loss over 10532880 tokens: 1.855
Average loss over 10518114 tokens: 1.848
Average loss over 10552673 tokens: 1.853
Average loss over 2183752 tokens: 1.850
Epoch: 8, train loss: 1.848, valid loss/error: 1.573 31.85
New best model saved
Average loss over 10520702 tokens: 1.847
Average loss over 10513407 tokens: 1.853
Average loss over 10522290 tokens: 1.843
Average loss over 10483856 tokens: 1.819
Average loss over 10557326 tokens: 1.839
Average loss over 10562485 tokens: 1.835
Average loss over 10522737 tokens: 1.856
Average loss over 10541996 tokens: 1.850
Average loss over 10523503 tokens: 1.837
Average loss over 10514678 tokens: 1.837
Average loss over 10567100 tokens: 1.861
Average loss over 10557642 tokens: 1.859
Average loss over 10561295 tokens: 1.848
Average loss over 2202485 tokens: 1.856
Epoch: 9, train loss: 1.845, valid loss/error: 1.569 31.82
New best model saved
Average loss over 10485903 tokens: 1.840
Average loss over 10610425 tokens: 1.833
Average loss over 10514724 tokens: 1.832
Average loss over 10518084 tokens: 1.842
Average loss over 10559266 tokens: 1.831
Average loss over 10522231 tokens: 1.866
Average loss over 10511142 tokens: 1.834
Average loss over 10543166 tokens: 1.828
Average loss over 10559159 tokens: 1.850
Average loss over 10518971 tokens: 1.841
Average loss over 10536121 tokens: 1.848
Average loss over 10552138 tokens: 1.860
Average loss over 10520134 tokens: 1.844
Average loss over 2200038 tokens: 1.864
Epoch: 10, train loss: 1.843, valid loss/error: 1.566 31.84
New best model saved
Average loss over 10519700 tokens: 1.844
Average loss over 10540267 tokens: 1.857
Average loss over 10545415 tokens: 1.836
Average loss over 10532810 tokens: 1.833
Average loss over 10542855 tokens: 1.829
Average loss over 10542633 tokens: 1.843
Average loss over 10522376 tokens: 1.838
Average loss over 10513569 tokens: 1.839
Average loss over 10518101 tokens: 1.834
Average loss over 10538316 tokens: 1.838
Average loss over 10563040 tokens: 1.853
Average loss over 10551302 tokens: 1.828
Average loss over 10531075 tokens: 1.855
Average loss over 2190043 tokens: 1.825
Epoch: 11, train loss: 1.840, valid loss/error: 1.564 31.76
New best model saved
Average loss over 10540010 tokens: 1.835
Average loss over 10523058 tokens: 1.832
Average loss over 10533857 tokens: 1.839
Average loss over 10555283 tokens: 1.831
Average loss over 10557713 tokens: 1.855
Average loss over 10529376 tokens: 1.833
Average loss over 10512551 tokens: 1.838
Average loss over 10539058 tokens: 1.846
Average loss over 10523644 tokens: 1.828
Average loss over 10554632 tokens: 1.853
Average loss over 10521472 tokens: 1.819
Average loss over 10549649 tokens: 1.839
Average loss over 10538062 tokens: 1.850
Average loss over 2173137 tokens: 1.831
Epoch: 12, train loss: 1.838, valid loss/error: 1.565 31.76
Average loss over 10498911 tokens: 1.811
Average loss over 10535902 tokens: 1.819
Average loss over 10529825 tokens: 1.819
Average loss over 10532156 tokens: 1.828
Average loss over 10516016 tokens: 1.818
Average loss over 10544420 tokens: 1.847
Average loss over 10558450 tokens: 1.858
Average loss over 10514659 tokens: 1.858
Average loss over 10598891 tokens: 1.866
Average loss over 10544780 tokens: 1.847
Average loss over 10501363 tokens: 1.844
Average loss over 10568466 tokens: 1.836
Average loss over 10515323 tokens: 1.829
Average loss over 2192340 tokens: 1.808
Epoch: 13, train loss: 1.836, valid loss/error: 1.561 31.78
New best model saved
Average loss over 10533355 tokens: 1.834
Average loss over 10528381 tokens: 1.819
Average loss over 10536104 tokens: 1.822
Average loss over 10523951 tokens: 1.827
Average loss over 10545931 tokens: 1.845
Average loss over 10497361 tokens: 1.839
Average loss over 10543211 tokens: 1.841
Average loss over 10558850 tokens: 1.838
Average loss over 10549107 tokens: 1.833
Average loss over 10531202 tokens: 1.829
Average loss over 10537833 tokens: 1.852
Average loss over 10515488 tokens: 1.828
Average loss over 10562849 tokens: 1.845
Average loss over 2187879 tokens: 1.824
Epoch: 14, train loss: 1.835, valid loss/error: 1.561 31.76
New best model saved
Average loss over 10569721 tokens: 1.839
Average loss over 10562206 tokens: 1.841
Average loss over 10528834 tokens: 1.812
Average loss over 10520753 tokens: 1.825
Average loss over 10539881 tokens: 1.823
Average loss over 10513146 tokens: 1.848
Average loss over 10524616 tokens: 1.843
Average loss over 10543829 tokens: 1.839
Average loss over 10505396 tokens: 1.811
Average loss over 10528326 tokens: 1.840
Average loss over 10518618 tokens: 1.837
Average loss over 10542167 tokens: 1.835
Average loss over 10552731 tokens: 1.826
Average loss over 2201278 tokens: 1.876
Epoch: 15, train loss: 1.833, valid loss/error: 1.561 31.74
New best model saved
Average loss over 10515433 tokens: 1.816
Average loss over 10511218 tokens: 1.831
Average loss over 10553305 tokens: 1.836
Average loss over 10531191 tokens: 1.831
Average loss over 10529572 tokens: 1.833
Average loss over 10561068 tokens: 1.833
Average loss over 10567158 tokens: 1.837
Average loss over 10526141 tokens: 1.821
Average loss over 10501530 tokens: 1.809
Average loss over 10539476 tokens: 1.830
Average loss over 10546228 tokens: 1.830
Average loss over 10559984 tokens: 1.854
Average loss over 10530801 tokens: 1.849
Average loss over 2178397 tokens: 1.827
Epoch: 16, train loss: 1.831, valid loss/error: 1.557 31.74
New best model saved
Average loss over 10519218 tokens: 1.827
Average loss over 10513050 tokens: 1.808
Average loss over 10519340 tokens: 1.819
Average loss over 10543656 tokens: 1.836
Average loss over 10530128 tokens: 1.839
Average loss over 10563845 tokens: 1.827
Average loss over 10530178 tokens: 1.801
Average loss over 10531208 tokens: 1.835
Average loss over 10540486 tokens: 1.836
Average loss over 10569008 tokens: 1.840
Average loss over 10494969 tokens: 1.836
Average loss over 10545409 tokens: 1.843
Average loss over 10551981 tokens: 1.842
Average loss over 2199026 tokens: 1.847
Epoch: 17, train loss: 1.830, valid loss/error: 1.558 31.69
New best model saved
Average loss over 10529836 tokens: 1.826
Average loss over 10582938 tokens: 1.846
Average loss over 10537764 tokens: 1.828
Average loss over 10543262 tokens: 1.816
Average loss over 10554661 tokens: 1.833
Average loss over 10552035 tokens: 1.829
Average loss over 10501601 tokens: 1.837
Average loss over 10544647 tokens: 1.835
Average loss over 10568824 tokens: 1.832
Average loss over 10501888 tokens: 1.820
Average loss over 10530533 tokens: 1.829
Average loss over 10517233 tokens: 1.828
Average loss over 10507610 tokens: 1.822
Average loss over 2178670 tokens: 1.795
Epoch: 18, train loss: 1.829, valid loss/error: 1.561 31.74
Average loss over 10504097 tokens: 1.807
Average loss over 10504706 tokens: 1.809
Average loss over 10524003 tokens: 1.821
Average loss over 10563768 tokens: 1.821
Average loss over 10521993 tokens: 1.830
Average loss over 10534940 tokens: 1.829
Average loss over 10561417 tokens: 1.845
Average loss over 10510120 tokens: 1.841
Average loss over 10539332 tokens: 1.822
Average loss over 6872272 tokens: 1.833
Epoch: 19, train loss: 1.826, valid loss/error: 1.562 31.71
Last training step reached
model saved
+ source /home/yfguo/scripts/init_conda.sh
+++ /home/yfguo/miniconda3/bin/conda shell.bash hook
++ __conda_setup='export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ '[' 0 -eq 0 ']'
++ eval 'export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
+++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ dirname /home/yfguo/miniconda3/bin
+++ PATH=/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
+++ conda activate base
+++ local cmd=activate
+++ case "$cmd" in
+++ __conda_activate activate base
+++ '[' -n '' ']'
+++ local ask_conda
++++ PS1=
++++ __conda_exe shell.posix activate base
++++ __add_sys_prefix_to_path
++++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ SYSP=/home/yfguo/miniconda3/bin
+++++ dirname /home/yfguo/miniconda3/bin
++++ SYSP=/home/yfguo/miniconda3
++++ '[' -n '' ']'
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export PATH
++++ /home/yfguo/miniconda3/bin/conda shell.posix activate base
+++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+++ eval 'PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++++ PS1='(base) '
++++ export PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export CONDA_PREFIX=/home/yfguo/miniconda3
++++ CONDA_PREFIX=/home/yfguo/miniconda3
++++ export CONDA_SHLVL=1
++++ CONDA_SHLVL=1
++++ export CONDA_DEFAULT_ENV=base
++++ CONDA_DEFAULT_ENV=base
++++ export 'CONDA_PROMPT_MODIFIER=(base) '
++++ CONDA_PROMPT_MODIFIER='(base) '
++++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ export _CE_M=
++++ _CE_M=
++++ export _CE_CONDA=
++++ _CE_CONDA=
++++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ __conda_hashr
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ hash -r
++ unset __conda_setup
+ conda activate Trans_base
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate Trans_base
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate Trans_base
++ __add_sys_prefix_to_path
++ '[' -n '' ']'
+++ dirname /home/yfguo/miniconda3/bin/conda
++ SYSP=/home/yfguo/miniconda3/bin
+++ dirname /home/yfguo/miniconda3/bin
++ SYSP=/home/yfguo/miniconda3
++ '[' -n '' ']'
++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export PATH
++ /home/yfguo/miniconda3/bin/conda shell.posix activate Trans_base
+ ask_conda='PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\'''
+ eval 'PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\'''
++ PS1='(Trans_base) '
++ export PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=Trans_base
++ CONDA_DEFAULT_ENV=Trans_base
++ export 'CONDA_PROMPT_MODIFIER=(Trans_base) '
++ CONDA_PROMPT_MODIFIER='(Trans_base) '
++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ export CONDA_PREFIX_1=/home/yfguo/miniconda3
++ CONDA_PREFIX_1=/home/yfguo/miniconda3
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python train_distill.py
Design models with seed: 666666
Load steacher model from: /home/yfguo/transformer_For_distill/Trans_for_distill/expm/wmt16cache/rs/std/weight_10/avg.h5
load student model from: /home/yfguo/transformer_For_distill/Trans_for_distill/expm/wmt16cache/rs/std/base/avg.h5
Init lr: 1e-05, Dev Loss/Error: 3.406 31.94
Average loss over 10514554 tokens: 2.111
Average loss over 10542484 tokens: 2.032
Average loss over 10525216 tokens: 1.959
Average loss over 10529901 tokens: 1.928
Average loss over 10570728 tokens: 1.908
Average loss over 10514814 tokens: 1.902
Average loss over 10539634 tokens: 1.887
Average loss over 10503578 tokens: 1.893
Average loss over 10571137 tokens: 1.884
Average loss over 10538922 tokens: 1.873
Average loss over 10544082 tokens: 1.879
Average loss over 10529841 tokens: 1.861
Average loss over 10532225 tokens: 1.868
Average loss over 2194386 tokens: 1.882
Epoch: 1, train loss: 1.921, valid loss/error: 1.555 32.04
New best model saved
Average loss over 10532181 tokens: 1.872
Average loss over 10542521 tokens: 1.859
Average loss over 10542676 tokens: 1.868
Average loss over 10515587 tokens: 1.868
Average loss over 10521838 tokens: 1.859
Average loss over 10526322 tokens: 1.867
Average loss over 10551403 tokens: 1.859
Average loss over 10509510 tokens: 1.858
Average loss over 10527200 tokens: 1.846
Average loss over 10532204 tokens: 1.860
Average loss over 10577636 tokens: 1.853
Average loss over 10536938 tokens: 1.870
Average loss over 10557140 tokens: 1.849
Average loss over 2178346 tokens: 1.872
Epoch: 2, train loss: 1.861, valid loss/error: 1.551 31.97
New best model saved
Average loss over 10532558 tokens: 1.860
Average loss over 10535815 tokens: 1.866
Average loss over 10534194 tokens: 1.853
Average loss over 10555879 tokens: 1.862
Average loss over 10530420 tokens: 1.847
Average loss over 10541473 tokens: 1.849
Average loss over 10525632 tokens: 1.834
Average loss over 10543203 tokens: 1.860
Average loss over 10510982 tokens: 1.844
Average loss over 10563056 tokens: 1.858
Average loss over 10504428 tokens: 1.844
Average loss over 10540283 tokens: 1.859
Average loss over 10551454 tokens: 1.859
Average loss over 2182125 tokens: 1.817
Epoch: 3, train loss: 1.853, valid loss/error: 1.545 31.92
New best model saved
Average loss over 10548993 tokens: 1.844
Average loss over 10548055 tokens: 1.862
Average loss over 10537538 tokens: 1.841
Average loss over 10509044 tokens: 1.823
Average loss over 10562099 tokens: 1.849
Average loss over 10548464 tokens: 1.849
Average loss over 10500812 tokens: 1.860
Average loss over 10526401 tokens: 1.839
Average loss over 10527079 tokens: 1.848
Average loss over 10534535 tokens: 1.868
Average loss over 10550644 tokens: 1.832
Average loss over 10554038 tokens: 1.859
Average loss over 10535805 tokens: 1.851
Average loss over 2167995 tokens: 1.841
Epoch: 4, train loss: 1.848, valid loss/error: 1.546 31.93
Average loss over 10534161 tokens: 1.840
Average loss over 10532752 tokens: 1.838
Average loss over 10522275 tokens: 1.848
Average loss over 10538424 tokens: 1.832
Average loss over 10537406 tokens: 1.845
Average loss over 10539117 tokens: 1.843
Average loss over 10503822 tokens: 1.849
Average loss over 10504440 tokens: 1.829
Average loss over 10532934 tokens: 1.842
Average loss over 10550931 tokens: 1.849
Average loss over 10552379 tokens: 1.861
Average loss over 10525549 tokens: 1.834
Average loss over 10580579 tokens: 1.855
Average loss over 2196733 tokens: 1.882
Epoch: 5, train loss: 1.844, valid loss/error: 1.538 31.87
New best model saved
Average loss over 10570501 tokens: 1.855
Average loss over 10512419 tokens: 1.837
Average loss over 10539465 tokens: 1.838
Average loss over 10554404 tokens: 1.834
Average loss over 10564794 tokens: 1.853
Average loss over 10515540 tokens: 1.839
Average loss over 10519021 tokens: 1.823
Average loss over 10554816 tokens: 1.858
Average loss over 10560522 tokens: 1.847
Average loss over 10518115 tokens: 1.844
Average loss over 10532635 tokens: 1.834
Average loss over 10488490 tokens: 1.828
Average loss over 10541039 tokens: 1.841
Average loss over 2179741 tokens: 1.857
Epoch: 6, train loss: 1.841, valid loss/error: 1.536 31.89
New best model saved
Average loss over 10547068 tokens: 1.850
Average loss over 10539689 tokens: 1.837
Average loss over 10514592 tokens: 1.853
Average loss over 10544132 tokens: 1.854
Average loss over 10514919 tokens: 1.831
Average loss over 10495480 tokens: 1.827
Average loss over 10572283 tokens: 1.843
Average loss over 10504986 tokens: 1.810
Average loss over 10556673 tokens: 1.854
Average loss over 10498253 tokens: 1.831
Average loss over 10573796 tokens: 1.844
Average loss over 10562270 tokens: 1.830
Average loss over 10520916 tokens: 1.827
Average loss over 2206445 tokens: 1.881
Epoch: 7, train loss: 1.838, valid loss/error: 1.534 31.84
New best model saved
Average loss over 10550220 tokens: 1.852
Average loss over 10561239 tokens: 1.845
Average loss over 10537947 tokens: 1.833
Average loss over 10562825 tokens: 1.835
Average loss over 10537692 tokens: 1.818
Average loss over 10489534 tokens: 1.838
Average loss over 10548543 tokens: 1.835
Average loss over 10491368 tokens: 1.825
Average loss over 10515385 tokens: 1.828
Average loss over 10569330 tokens: 1.841
Average loss over 10532880 tokens: 1.844
Average loss over 10518114 tokens: 1.836
Average loss over 10552673 tokens: 1.841
Average loss over 2183752 tokens: 1.845
Epoch: 8, train loss: 1.836, valid loss/error: 1.535 31.84
New best model saved
Average loss over 10520702 tokens: 1.831
Average loss over 10513407 tokens: 1.839
Average loss over 10522290 tokens: 1.834
Average loss over 10483856 tokens: 1.810
Average loss over 10557326 tokens: 1.829
Average loss over 10562485 tokens: 1.821
Average loss over 10522737 tokens: 1.846
Average loss over 10541996 tokens: 1.839
Average loss over 10523503 tokens: 1.828
Average loss over 10514678 tokens: 1.824
Average loss over 10567100 tokens: 1.851
Average loss over 10557642 tokens: 1.850
Average loss over 10561295 tokens: 1.840
Average loss over 2202485 tokens: 1.840
Epoch: 9, train loss: 1.834, valid loss/error: 1.532 31.78
New best model saved
Average loss over 10485903 tokens: 1.830
Average loss over 10610425 tokens: 1.823
Average loss over 10514724 tokens: 1.822
Average loss over 10518084 tokens: 1.834
Average loss over 10559266 tokens: 1.823
Average loss over 10522231 tokens: 1.854
Average loss over 10511142 tokens: 1.821
Average loss over 10543166 tokens: 1.819
Average loss over 10559159 tokens: 1.839
Average loss over 10518971 tokens: 1.830
Average loss over 10536121 tokens: 1.839
Average loss over 10552138 tokens: 1.848
Average loss over 10520134 tokens: 1.834
Average loss over 2200038 tokens: 1.852
Epoch: 10, train loss: 1.832, valid loss/error: 1.531 31.75
New best model saved
Average loss over 10519700 tokens: 1.832
Average loss over 10540267 tokens: 1.849
Average loss over 10545415 tokens: 1.827
Average loss over 10532810 tokens: 1.824
Average loss over 10542855 tokens: 1.822
Average loss over 10542633 tokens: 1.833
Average loss over 10522376 tokens: 1.825
Average loss over 10513569 tokens: 1.831
Average loss over 10518101 tokens: 1.825
Average loss over 10538316 tokens: 1.828
Average loss over 10563040 tokens: 1.842
Average loss over 10551302 tokens: 1.816
Average loss over 10531075 tokens: 1.848
Average loss over 2190043 tokens: 1.812
Epoch: 11, train loss: 1.831, valid loss/error: 1.530 31.73
New best model saved
Average loss over 10540010 tokens: 1.822
Average loss over 10523058 tokens: 1.820
Average loss over 10533857 tokens: 1.827
Average loss over 10555283 tokens: 1.820
Average loss over 10557713 tokens: 1.849
Average loss over 10529376 tokens: 1.827
Average loss over 10512551 tokens: 1.826
Average loss over 10539058 tokens: 1.841
Average loss over 10523644 tokens: 1.823
Average loss over 10554632 tokens: 1.844
Average loss over 10521472 tokens: 1.814
Average loss over 10549649 tokens: 1.827
Average loss over 10538062 tokens: 1.839
Average loss over 2173137 tokens: 1.820
Epoch: 12, train loss: 1.829, valid loss/error: 1.532 31.75
Average loss over 10498911 tokens: 1.804
Average loss over 10535902 tokens: 1.806
Average loss over 10529825 tokens: 1.810
Average loss over 10532156 tokens: 1.819
Average loss over 10516016 tokens: 1.811
Average loss over 10544420 tokens: 1.843
Average loss over 10558450 tokens: 1.843
Average loss over 10514659 tokens: 1.844
Average loss over 10598891 tokens: 1.858
Average loss over 10544780 tokens: 1.839
Average loss over 10501363 tokens: 1.839
Average loss over 10568466 tokens: 1.829
Average loss over 10515323 tokens: 1.821
Average loss over 2192340 tokens: 1.798
Epoch: 13, train loss: 1.828, valid loss/error: 1.530 31.68
New best model saved
Average loss over 10533355 tokens: 1.828
Average loss over 10528381 tokens: 1.810
Average loss over 10536104 tokens: 1.813
Average loss over 10523951 tokens: 1.818
Average loss over 10545931 tokens: 1.834
Average loss over 10497361 tokens: 1.833
Average loss over 10543211 tokens: 1.833
Average loss over 10558850 tokens: 1.830
Average loss over 10549107 tokens: 1.829
Average loss over 10531202 tokens: 1.818
Average loss over 10537833 tokens: 1.844
Average loss over 10515488 tokens: 1.818
Average loss over 10562849 tokens: 1.840
Average loss over 2187879 tokens: 1.809
Epoch: 14, train loss: 1.826, valid loss/error: 1.528 31.74
New best model saved
Average loss over 10569721 tokens: 1.829
Average loss over 10562206 tokens: 1.834
Average loss over 10528834 tokens: 1.808
Average loss over 10520753 tokens: 1.819
Average loss over 10539881 tokens: 1.810
Average loss over 10513146 tokens: 1.839
Average loss over 10524616 tokens: 1.833
Average loss over 10543829 tokens: 1.830
Average loss over 10505396 tokens: 1.805
Average loss over 10528326 tokens: 1.835
Average loss over 10518618 tokens: 1.829
Average loss over 10542167 tokens: 1.828
Average loss over 10552731 tokens: 1.818
Average loss over 2201278 tokens: 1.864
Epoch: 15, train loss: 1.825, valid loss/error: 1.527 31.70
New best model saved
Average loss over 10515433 tokens: 1.810
Average loss over 10511218 tokens: 1.822
Average loss over 10553305 tokens: 1.829
Average loss over 10531191 tokens: 1.819
Average loss over 10529572 tokens: 1.828
Average loss over 10561068 tokens: 1.825
Average loss over 10567158 tokens: 1.828
Average loss over 10526141 tokens: 1.812
Average loss over 10501530 tokens: 1.801
Average loss over 10539476 tokens: 1.825
Average loss over 10546228 tokens: 1.820
Average loss over 10559984 tokens: 1.848
Average loss over 10530801 tokens: 1.845
Average loss over 2178397 tokens: 1.819
Epoch: 16, train loss: 1.824, valid loss/error: 1.527 31.74
Average loss over 10519218 tokens: 1.821
Average loss over 10513050 tokens: 1.801
Average loss over 10519340 tokens: 1.808
Average loss over 10543656 tokens: 1.827
Average loss over 10530128 tokens: 1.833
Average loss over 10563845 tokens: 1.819
Average loss over 10530178 tokens: 1.792
Average loss over 10531208 tokens: 1.828
Average loss over 10540486 tokens: 1.827
Average loss over 10569008 tokens: 1.834
Average loss over 10494969 tokens: 1.835
Average loss over 10545409 tokens: 1.837
Average loss over 10551981 tokens: 1.832
Average loss over 2199026 tokens: 1.844
Epoch: 17, train loss: 1.823, valid loss/error: 1.525 31.70
New best model saved
Average loss over 10529836 tokens: 1.822
Average loss over 10582938 tokens: 1.844
Average loss over 10537764 tokens: 1.820
Average loss over 10543262 tokens: 1.813
Average loss over 10554661 tokens: 1.824
Average loss over 10552035 tokens: 1.822
Average loss over 10501601 tokens: 1.829
Average loss over 10544647 tokens: 1.827
Average loss over 10568824 tokens: 1.825
Average loss over 10501888 tokens: 1.813
Average loss over 10530533 tokens: 1.822
Average loss over 10517233 tokens: 1.819
Average loss over 10507610 tokens: 1.814
Average loss over 2178670 tokens: 1.793
Epoch: 18, train loss: 1.822, valid loss/error: 1.529 31.69
Average loss over 10504097 tokens: 1.797
Average loss over 10504706 tokens: 1.803
Average loss over 10524003 tokens: 1.816
Average loss over 10563768 tokens: 1.815
Average loss over 10521993 tokens: 1.823
Average loss over 10534940 tokens: 1.824
Average loss over 10561417 tokens: 1.839
Average loss over 10510120 tokens: 1.838
Average loss over 10539332 tokens: 1.817
Average loss over 6872272 tokens: 1.825
Epoch: 19, train loss: 1.819, valid loss/error: 1.528 31.67
New best model saved
Last training step reached
model saved
+ source /home/yfguo/scripts/init_conda.sh
+++ /home/yfguo/miniconda3/bin/conda shell.bash hook
++ __conda_setup='export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ '[' 0 -eq 0 ']'
++ eval 'export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
+++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ dirname /home/yfguo/miniconda3/bin
+++ PATH=/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
+++ conda activate base
+++ local cmd=activate
+++ case "$cmd" in
+++ __conda_activate activate base
+++ '[' -n '' ']'
+++ local ask_conda
++++ PS1=
++++ __conda_exe shell.posix activate base
++++ __add_sys_prefix_to_path
++++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ SYSP=/home/yfguo/miniconda3/bin
+++++ dirname /home/yfguo/miniconda3/bin
++++ SYSP=/home/yfguo/miniconda3
++++ '[' -n '' ']'
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export PATH
++++ /home/yfguo/miniconda3/bin/conda shell.posix activate base
+++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+++ eval 'PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++++ PS1='(base) '
++++ export PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export CONDA_PREFIX=/home/yfguo/miniconda3
++++ CONDA_PREFIX=/home/yfguo/miniconda3
++++ export CONDA_SHLVL=1
++++ CONDA_SHLVL=1
++++ export CONDA_DEFAULT_ENV=base
++++ CONDA_DEFAULT_ENV=base
++++ export 'CONDA_PROMPT_MODIFIER=(base) '
++++ CONDA_PROMPT_MODIFIER='(base) '
++++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ export _CE_M=
++++ _CE_M=
++++ export _CE_CONDA=
++++ _CE_CONDA=
++++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ __conda_hashr
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ hash -r
++ unset __conda_setup
+ conda activate Trans_base
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate Trans_base
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate Trans_base
++ __add_sys_prefix_to_path
++ '[' -n '' ']'
+++ dirname /home/yfguo/miniconda3/bin/conda
++ SYSP=/home/yfguo/miniconda3/bin
+++ dirname /home/yfguo/miniconda3/bin
++ SYSP=/home/yfguo/miniconda3
++ '[' -n '' ']'
++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export PATH
++ /home/yfguo/miniconda3/bin/conda shell.posix activate Trans_base
+ ask_conda='PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\'''
+ eval 'PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\'''
++ PS1='(Trans_base) '
++ export PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=Trans_base
++ CONDA_DEFAULT_ENV=Trans_base
++ export 'CONDA_PROMPT_MODIFIER=(Trans_base) '
++ CONDA_PROMPT_MODIFIER='(Trans_base) '
++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ export CONDA_PREFIX_1=/home/yfguo/miniconda3
++ CONDA_PREFIX_1=/home/yfguo/miniconda3
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python train_distill3.py
Design models with seed: 666666
Load steacher model from: /home/yfguo/transformer_For_distill/Trans_for_distill/expm/wmt16cache/rs/std/daoshu/avg.h5
load student model from: /home/yfguo/transformer_For_distill/Trans_for_distill/expm/wmt16cache/rs/std/base/avg.h5
Init lr: 1e-05, Dev Loss/Error: 4.234 31.94
Average loss over 10514554 tokens: 2.598, valid loss/error: 3.442 32.28
New best model saved
Average loss over 10542484 tokens: 2.247, valid loss/error: 3.197 32.25
New best model saved
Average loss over 10525216 tokens: 2.139, valid loss/error: 2.908 32.20
New best model saved
Average loss over 10529901 tokens: 2.101, valid loss/error: 2.626 32.21
New best model saved
Average loss over 10570728 tokens: 2.079, valid loss/error: 2.325 32.18
New best model saved
Average loss over 10514814 tokens: 2.072, valid loss/error: 2.064 32.13
New best model saved
Average loss over 10539634 tokens: 2.053, valid loss/error: 1.865 32.19
New best model saved
Average loss over 10503578 tokens: 2.058, valid loss/error: 1.771 32.17
New best model saved
Average loss over 10571137 tokens: 2.047, valid loss/error: 1.740 32.16
New best model saved
Average loss over 10538922 tokens: 2.033, valid loss/error: 1.722 32.16
New best model saved
Average loss over 10544082 tokens: 2.038, valid loss/error: 1.722 32.14
Average loss over 10529841 tokens: 2.018, valid loss/error: 1.708 32.17
New best model saved
Average loss over 10532225 tokens: 2.024, valid loss/error: 1.719 32.15
Average loss over 2194386 tokens: 2.038
Epoch: 1, train loss: 2.114, valid loss/error: 1.706 32.17
New best model saved
Average loss over 10532181 tokens: 2.027, valid loss/error: 1.718 32.12
Average loss over 10542521 tokens: 2.012, valid loss/error: 1.709 32.16
Average loss over 10542676 tokens: 2.022, valid loss/error: 1.713 32.13
Average loss over 10515587 tokens: 2.021, valid loss/error: 1.712 32.12
Average loss over 10521838 tokens: 2.010, valid loss/error: 1.707 32.18
Average loss over 10526322 tokens: 2.017, valid loss/error: 1.707 32.08
Average loss over 10551403 tokens: 2.009, valid loss/error: 1.705 32.12
New best model saved
Average loss over 10509510 tokens: 2.006, valid loss/error: 1.707 32.08
Average loss over 10527200 tokens: 1.994, valid loss/error: 1.702 32.11
New best model saved
Average loss over 10532204 tokens: 2.006, valid loss/error: 1.697 32.06
New best model saved
Average loss over 10577636 tokens: 1.999, valid loss/error: 1.704 32.08
Average loss over 10536938 tokens: 2.016, valid loss/error: 1.696 32.06
New best model saved
Average loss over 10557140 tokens: 1.994, valid loss/error: 1.698 32.08
Average loss over 2178346 tokens: 2.017
Epoch: 2, train loss: 2.010, valid loss/error: 1.692 32.07
New best model saved
Average loss over 10532558 tokens: 2.004, valid loss/error: 1.692 32.05
New best model saved
Average loss over 10535815 tokens: 2.010, valid loss/error: 1.691 32.10
New best model saved
Average loss over 10534194 tokens: 1.996, valid loss/error: 1.696 32.11
Average loss over 10555879 tokens: 2.003, valid loss/error: 1.696 32.06
Average loss over 10530420 tokens: 1.988, valid loss/error: 1.693 32.05
Average loss over 10541473 tokens: 1.989, valid loss/error: 1.686 32.07
New best model saved
Average loss over 10525632 tokens: 1.973, valid loss/error: 1.682 32.02
New best model saved
Average loss over 10543203 tokens: 1.999, valid loss/error: 1.685 32.04
Average loss over 10510982 tokens: 1.983, valid loss/error: 1.682 32.03
Average loss over 10563056 tokens: 1.996, valid loss/error: 1.689 32.02
Average loss over 10504428 tokens: 1.980, valid loss/error: 1.693 32.01
Average loss over 10540283 tokens: 1.995, valid loss/error: 1.684 32.01
Average loss over 10551454 tokens: 1.995, valid loss/error: 1.682 32.00
Average loss over 2182125 tokens: 1.951
Epoch: 3, train loss: 1.993, valid loss/error: 1.684 32.01
Average loss over 10548993 tokens: 1.979, valid loss/error: 1.672 32.02
New best model saved
Average loss over 10548055 tokens: 1.996, valid loss/error: 1.680 32.03
Average loss over 10537538 tokens: 1.974, valid loss/error: 1.683 32.02
Average loss over 10509044 tokens: 1.954, valid loss/error: 1.679 32.01
Average loss over 10562099 tokens: 1.981, valid loss/error: 1.678 32.04
Average loss over 10548464 tokens: 1.980, valid loss/error: 1.675 32.02
Average loss over 10500812 tokens: 1.991, valid loss/error: 1.677 32.03
Average loss over 10526401 tokens: 1.968, valid loss/error: 1.671 32.00
New best model saved
Average loss over 10527079 tokens: 1.978, valid loss/error: 1.673 32.01
Average loss over 10534535 tokens: 1.998, valid loss/error: 1.670 32.02
New best model saved
Average loss over 10550644 tokens: 1.960, valid loss/error: 1.676 32.01
Average loss over 10554038 tokens: 1.988, valid loss/error: 1.670 32.03
Average loss over 10535805 tokens: 1.979, valid loss/error: 1.671 32.03
Average loss over 2167995 tokens: 1.968
Epoch: 4, train loss: 1.979, valid loss/error: 1.674 32.01
Average loss over 10534161 tokens: 1.966, valid loss/error: 1.669 32.01
New best model saved
Average loss over 10532752 tokens: 1.963, valid loss/error: 1.663 32.00
New best model saved
Average loss over 10522275 tokens: 1.973, valid loss/error: 1.658 31.98
New best model saved
Average loss over 10538424 tokens: 1.956, valid loss/error: 1.664 31.98
Average loss over 10537406 tokens: 1.969, valid loss/error: 1.672 32.03
Average loss over 10539117 tokens: 1.966, valid loss/error: 1.661 31.98
Average loss over 10503822 tokens: 1.972, valid loss/error: 1.658 32.02
Average loss over 10504440 tokens: 1.951, valid loss/error: 1.655 32.03
New best model saved
Average loss over 10532934 tokens: 1.964, valid loss/error: 1.665 31.99
Average loss over 10550931 tokens: 1.970, valid loss/error: 1.660 31.98
Average loss over 10552379 tokens: 1.983, valid loss/error: 1.656 31.97
Average loss over 10525549 tokens: 1.954, valid loss/error: 1.659 32.00
Average loss over 10580579 tokens: 1.975, valid loss/error: 1.656 31.99
Average loss over 2196733 tokens: 2.001
Epoch: 5, train loss: 1.967, valid loss/error: 1.651 32.00
New best model saved
Average loss over 10570501 tokens: 1.974, valid loss/error: 1.650 31.99
New best model saved
Average loss over 10512419 tokens: 1.955, valid loss/error: 1.647 31.99
New best model saved
Average loss over 10539465 tokens: 1.956, valid loss/error: 1.654 31.96
Average loss over 10554404 tokens: 1.950, valid loss/error: 1.653 31.95
Average loss over 10564794 tokens: 1.970, valid loss/error: 1.656 31.94
Average loss over 10515540 tokens: 1.955, valid loss/error: 1.648 32.00
Average loss over 10519021 tokens: 1.938, valid loss/error: 1.649 31.98
Average loss over 10554816 tokens: 1.974, valid loss/error: 1.647 31.94
New best model saved
Average loss over 10560522 tokens: 1.961, valid loss/error: 1.644 31.94
New best model saved
Average loss over 10518115 tokens: 1.958, valid loss/error: 1.645 31.99
Average loss over 10532635 tokens: 1.947, valid loss/error: 1.644 32.00
New best model saved
Average loss over 10488490 tokens: 1.941, valid loss/error: 1.641 32.00
New best model saved
Average loss over 10541039 tokens: 1.954, valid loss/error: 1.643 32.00
Average loss over 2179741 tokens: 1.970
Epoch: 6, train loss: 1.957, valid loss/error: 1.647 31.99
Average loss over 10547068 tokens: 1.962, valid loss/error: 1.640 31.96
New best model saved
Average loss over 10539689 tokens: 1.947, valid loss/error: 1.642 32.01
Average loss over 10514592 tokens: 1.964, valid loss/error: 1.636 31.99
New best model saved
Average loss over 10544132 tokens: 1.964, valid loss/error: 1.641 32.02
Average loss over 10514919 tokens: 1.940, valid loss/error: 1.642 32.01
Average loss over 10495480 tokens: 1.937, valid loss/error: 1.649 31.97
Average loss over 10572283 tokens: 1.952, valid loss/error: 1.646 31.96
Average loss over 10504986 tokens: 1.917, valid loss/error: 1.641 31.94
Average loss over 10556673 tokens: 1.962, valid loss/error: 1.640 31.97
Average loss over 10498253 tokens: 1.937, valid loss/error: 1.642 31.91
New best model saved
Average loss over 10573796 tokens: 1.950, valid loss/error: 1.640 31.93
Average loss over 10562270 tokens: 1.936, valid loss/error: 1.636 31.97
New best model saved
Average loss over 10520916 tokens: 1.933, valid loss/error: 1.638 31.91
New best model saved
Average loss over 2206445 tokens: 1.988
Epoch: 7, train loss: 1.947, valid loss/error: 1.639 31.95
Average loss over 10550220 tokens: 1.957, valid loss/error: 1.638 31.94
Average loss over 10561239 tokens: 1.950, valid loss/error: 1.638 31.95
Average loss over 10537947 tokens: 1.937, valid loss/error: 1.639 31.92
Average loss over 10562825 tokens: 1.939, valid loss/error: 1.642 31.92
Average loss over 10537692 tokens: 1.921, valid loss/error: 1.635 31.88
New best model saved
Average loss over 10489534 tokens: 1.940, valid loss/error: 1.636 31.91
Average loss over 10548543 tokens: 1.937, valid loss/error: 1.633 31.91
New best model saved
Average loss over 10491368 tokens: 1.927, valid loss/error: 1.634 31.92
Average loss over 10515385 tokens: 1.929, valid loss/error: 1.632 31.91
New best model saved
Average loss over 10569330 tokens: 1.942, valid loss/error: 1.639 31.94
Average loss over 10532880 tokens: 1.945, valid loss/error: 1.635 31.97
Average loss over 10518114 tokens: 1.936, valid loss/error: 1.632 31.94
New best model saved
Average loss over 10552673 tokens: 1.941, valid loss/error: 1.631 31.92
New best model saved
Average loss over 2183752 tokens: 1.945
Epoch: 8, train loss: 1.939, valid loss/error: 1.636 31.96
Average loss over 10520702 tokens: 1.930, valid loss/error: 1.629 31.93
New best model saved
Average loss over 10513407 tokens: 1.938, valid loss/error: 1.629 31.98
Average loss over 10522290 tokens: 1.931, valid loss/error: 1.627 31.95
New best model saved
Average loss over 10483856 tokens: 1.906, valid loss/error: 1.628 31.95
Average loss over 10557326 tokens: 1.926, valid loss/error: 1.636 31.93
Average loss over 10562485 tokens: 1.918, valid loss/error: 1.631 31.89
Average loss over 10522737 tokens: 1.942, valid loss/error: 1.628 31.88
New best model saved
Average loss over 10541996 tokens: 1.936, valid loss/error: 1.633 31.91
Average loss over 10523503 tokens: 1.922, valid loss/error: 1.632 31.90
Average loss over 10514678 tokens: 1.919, valid loss/error: 1.625 31.90
New best model saved
Average loss over 10567100 tokens: 1.946, valid loss/error: 1.628 31.92
Average loss over 10557642 tokens: 1.945, valid loss/error: 1.620 31.92
New best model saved
Average loss over 10561295 tokens: 1.934, valid loss/error: 1.623 31.93
Average loss over 2202485 tokens: 1.933
Epoch: 9, train loss: 1.930, valid loss/error: 1.618 31.87
New best model saved
Average loss over 10485903 tokens: 1.923, valid loss/error: 1.624 31.88
Average loss over 10610425 tokens: 1.915, valid loss/error: 1.617 31.91
New best model saved
Average loss over 10514724 tokens: 1.914, valid loss/error: 1.623 31.90
Average loss over 10518084 tokens: 1.926, valid loss/error: 1.618 31.93
Average loss over 10559266 tokens: 1.914, valid loss/error: 1.625 31.91
Average loss over 10522231 tokens: 1.946, valid loss/error: 1.626 31.88
Average loss over 10511142 tokens: 1.911, valid loss/error: 1.623 31.88
Average loss over 10543166 tokens: 1.909, valid loss/error: 1.622 31.92
Average loss over 10559159 tokens: 1.929, valid loss/error: 1.618 31.92
Average loss over 10518971 tokens: 1.920, valid loss/error: 1.620 31.90
Average loss over 10536121 tokens: 1.928, valid loss/error: 1.620 31.92
Average loss over 10552138 tokens: 1.937, valid loss/error: 1.620 31.92
Average loss over 10520134 tokens: 1.922, valid loss/error: 1.613 31.88
New best model saved
Average loss over 2200038 tokens: 1.940
Epoch: 10, train loss: 1.923, valid loss/error: 1.614 31.89
Average loss over 10519700 tokens: 1.920, valid loss/error: 1.620 31.88
Average loss over 10540267 tokens: 1.938, valid loss/error: 1.614 31.89
Average loss over 10545415 tokens: 1.913, valid loss/error: 1.620 31.87
New best model saved
Average loss over 10532810 tokens: 1.910, valid loss/error: 1.617 31.89
Average loss over 10542855 tokens: 1.908, valid loss/error: 1.621 31.90
Average loss over 10542633 tokens: 1.918, valid loss/error: 1.621 31.85
New best model saved
Average loss over 10522376 tokens: 1.909, valid loss/error: 1.623 31.87
Average loss over 10513569 tokens: 1.917, valid loss/error: 1.620 31.92
Average loss over 10518101 tokens: 1.910, valid loss/error: 1.625 31.93
Average loss over 10538316 tokens: 1.912, valid loss/error: 1.621 31.87
Average loss over 10563040 tokens: 1.926, valid loss/error: 1.618 31.88
Average loss over 10551302 tokens: 1.899, valid loss/error: 1.616 31.89
Average loss over 10531075 tokens: 1.932, valid loss/error: 1.614 31.89
Average loss over 2190043 tokens: 1.895
Epoch: 11, train loss: 1.916, valid loss/error: 1.611 31.84
New best model saved
Average loss over 10540010 tokens: 1.905, valid loss/error: 1.617 31.89
Average loss over 10523058 tokens: 1.902, valid loss/error: 1.614 31.90
Average loss over 10533857 tokens: 1.909, valid loss/error: 1.614 31.90
Average loss over 10555283 tokens: 1.901, valid loss/error: 1.615 31.92
Average loss over 10557713 tokens: 1.930, valid loss/error: 1.613 31.87
Average loss over 10529376 tokens: 1.907, valid loss/error: 1.612 31.88
Average loss over 10512551 tokens: 1.906, valid loss/error: 1.611 31.80
New best model saved
Average loss over 10539058 tokens: 1.921, valid loss/error: 1.611 31.80
Average loss over 10523644 tokens: 1.903, valid loss/error: 1.611 31.83
Average loss over 10554632 tokens: 1.923, valid loss/error: 1.610 31.82
New best model saved
Average loss over 10521472 tokens: 1.892, valid loss/error: 1.610 31.88
New best model saved
Average loss over 10549649 tokens: 1.905, valid loss/error: 1.609 31.84
New best model saved
Average loss over 10538062 tokens: 1.918, valid loss/error: 1.610 31.87
Average loss over 2173137 tokens: 1.896
Epoch: 12, train loss: 1.909, valid loss/error: 1.611 31.87
Average loss over 10498911 tokens: 1.881, valid loss/error: 1.613 31.85
Average loss over 10535902 tokens: 1.882, valid loss/error: 1.614 31.84
Average loss over 10529825 tokens: 1.886, valid loss/error: 1.612 31.87
Average loss over 10532156 tokens: 1.895, valid loss/error: 1.613 31.84
Average loss over 10516016 tokens: 1.886, valid loss/error: 1.611 31.83
Average loss over 10544420 tokens: 1.919, valid loss/error: 1.612 31.87
Average loss over 10558450 tokens: 1.919, valid loss/error: 1.609 31.80
New best model saved
Average loss over 10514659 tokens: 1.920, valid loss/error: 1.606 31.83
New best model saved
Average loss over 10598891 tokens: 1.933, valid loss/error: 1.604 31.84
New best model saved
Average loss over 10544780 tokens: 1.914, valid loss/error: 1.607 31.86
Average loss over 10501363 tokens: 1.913, valid loss/error: 1.607 31.87
Average loss over 10568466 tokens: 1.902, valid loss/error: 1.605 31.82
Average loss over 10515323 tokens: 1.894, valid loss/error: 1.605 31.82
Average loss over 2192340 tokens: 1.869
Epoch: 13, train loss: 1.903, valid loss/error: 1.603 31.80
New best model saved
Average loss over 10533355 tokens: 1.900, valid loss/error: 1.600 31.83
New best model saved
Average loss over 10528381 tokens: 1.881, valid loss/error: 1.602 31.83
Average loss over 10536104 tokens: 1.884, valid loss/error: 1.605 31.82
Average loss over 10523951 tokens: 1.889, valid loss/error: 1.603 31.81
Average loss over 10545931 tokens: 1.905, valid loss/error: 1.603 31.80
New best model saved
Average loss over 10497361 tokens: 1.904, valid loss/error: 1.596 31.81
New best model saved
Average loss over 10543211 tokens: 1.904, valid loss/error: 1.601 31.81
Average loss over 10558850 tokens: 1.900, valid loss/error: 1.599 31.83
Average loss over 10549107 tokens: 1.899, valid loss/error: 1.604 31.78
New best model saved
Average loss over 10531202 tokens: 1.887, valid loss/error: 1.602 31.81
Average loss over 10537833 tokens: 1.913, valid loss/error: 1.603 31.85
Average loss over 10515488 tokens: 1.888, valid loss/error: 1.599 31.84
Average loss over 10562849 tokens: 1.909, valid loss/error: 1.600 31.85
Average loss over 2187879 tokens: 1.877
Epoch: 14, train loss: 1.897, valid loss/error: 1.600 31.83
Average loss over 10569721 tokens: 1.898, valid loss/error: 1.599 31.85
Average loss over 10562206 tokens: 1.902, valid loss/error: 1.593 31.84
New best model saved
Average loss over 10528834 tokens: 1.875, valid loss/error: 1.599 31.82
Average loss over 10520753 tokens: 1.886, valid loss/error: 1.600 31.80
Average loss over 10539881 tokens: 1.876, valid loss/error: 1.602 31.81
Average loss over 10513146 tokens: 1.906, valid loss/error: 1.600 31.82
Average loss over 10524616 tokens: 1.900, valid loss/error: 1.598 31.80
Average loss over 10543829 tokens: 1.896, valid loss/error: 1.596 31.80
Average loss over 10505396 tokens: 1.870, valid loss/error: 1.601 31.82
Average loss over 10528326 tokens: 1.901, valid loss/error: 1.597 31.80
Average loss over 10518618 tokens: 1.894, valid loss/error: 1.602 31.82
Average loss over 10542167 tokens: 1.893, valid loss/error: 1.599 31.79
Average loss over 10552731 tokens: 1.882, valid loss/error: 1.596 31.84
Average loss over 2201278 tokens: 1.928
Epoch: 15, train loss: 1.891, valid loss/error: 1.595 31.79
Average loss over 10515433 tokens: 1.873, valid loss/error: 1.599 31.84
Average loss over 10511218 tokens: 1.886, valid loss/error: 1.601 31.86
Average loss over 10553305 tokens: 1.892, valid loss/error: 1.597 31.79
Average loss over 10531191 tokens: 1.882, valid loss/error: 1.595 31.79
Average loss over 10529572 tokens: 1.890, valid loss/error: 1.598 31.78
Average loss over 10561068 tokens: 1.887, valid loss/error: 1.596 31.79
Average loss over 10567158 tokens: 1.889, valid loss/error: 1.594 31.78
Average loss over 10526141 tokens: 1.873, valid loss/error: 1.591 31.83
New best model saved
Average loss over 10501530 tokens: 1.862, valid loss/error: 1.593 31.78
New best model saved
Average loss over 10539476 tokens: 1.886, valid loss/error: 1.595 31.78
Average loss over 10546228 tokens: 1.880, valid loss/error: 1.594 31.78
Average loss over 10559984 tokens: 1.909, valid loss/error: 1.597 31.82
Average loss over 10530801 tokens: 1.906, valid loss/error: 1.594 31.80
Average loss over 2178397 tokens: 1.879
Epoch: 16, train loss: 1.886, valid loss/error: 1.594 31.84
Average loss over 10519218 tokens: 1.881, valid loss/error: 1.595 31.88
Average loss over 10513050 tokens: 1.860, valid loss/error: 1.595 31.84
Average loss over 10519340 tokens: 1.867, valid loss/error: 1.589 31.79
New best model saved
Average loss over 10543656 tokens: 1.885, valid loss/error: 1.595 31.81
Average loss over 10530128 tokens: 1.892, valid loss/error: 1.594 31.82
Average loss over 10563845 tokens: 1.877, valid loss/error: 1.588 31.80
New best model saved
Average loss over 10530178 tokens: 1.849, valid loss/error: 1.589 31.83
Average loss over 10531208 tokens: 1.885, valid loss/error: 1.591 31.83
Average loss over 10540486 tokens: 1.884, valid loss/error: 1.592 31.80
Average loss over 10569008 tokens: 1.890, valid loss/error: 1.593 31.82
Average loss over 10494969 tokens: 1.891, valid loss/error: 1.591 31.81
Average loss over 10545409 tokens: 1.894, valid loss/error: 1.590 31.83
Average loss over 10551981 tokens: 1.888, valid loss/error: 1.591 31.82
Average loss over 2199026 tokens: 1.902
Epoch: 17, train loss: 1.881, valid loss/error: 1.590 31.77
New best model saved
Average loss over 10529836 tokens: 1.877, valid loss/error: 1.588 31.81
New best model saved
Average loss over 10582938 tokens: 1.899, valid loss/error: 1.589 31.82
Average loss over 10537764 tokens: 1.875, valid loss/error: 1.591 31.81
Average loss over 10543262 tokens: 1.867, valid loss/error: 1.589 31.76
New best model saved
Average loss over 10554661 tokens: 1.878, valid loss/error: 1.588 31.84
New best model saved
Average loss over 10552035 tokens: 1.876, valid loss/error: 1.591 31.77
Average loss over 10501601 tokens: 1.882, valid loss/error: 1.587 31.82
New best model saved
Average loss over 10544647 tokens: 1.880, valid loss/error: 1.586 31.81
New best model saved
Average loss over 10568824 tokens: 1.878, valid loss/error: 1.580 31.79
New best model saved
Average loss over 10501888 tokens: 1.865, valid loss/error: 1.585 31.80
Average loss over 10530533 tokens: 1.874, valid loss/error: 1.586 31.79
Average loss over 10517233 tokens: 1.872, valid loss/error: 1.586 31.79
Average loss over 10507610 tokens: 1.866, valid loss/error: 1.587 31.82
Average loss over 2178670 tokens: 1.845
Epoch: 18, train loss: 1.876, valid loss/error: 1.588 31.80
Average loss over 10504097 tokens: 1.848, valid loss/error: 1.587 31.75
New best model saved
Average loss over 10504706 tokens: 1.854, valid loss/error: 1.593 31.78
Average loss over 10524003 tokens: 1.867, valid loss/error: 1.588 31.79
Average loss over 10563768 tokens: 1.865, valid loss/error: 1.587 31.80
Average loss over 10521993 tokens: 1.873, valid loss/error: 1.587 31.83
Average loss over 10534940 tokens: 1.873, valid loss/error: 1.587 31.80
Average loss over 10561417 tokens: 1.890, valid loss/error: 1.587 31.79
Average loss over 10510120 tokens: 1.889, valid loss/error: 1.589 31.76
Average loss over 10539332 tokens: 1.866, valid loss/error: 1.586 31.78
Average loss over 6872272 tokens: 1.874
Epoch: 19, train loss: 1.870, valid loss/error: 1.587 31.79
Last training step reached
model saved
+ source /home/yfguo/scripts/init_conda.sh
+++ /home/yfguo/miniconda3/bin/conda shell.bash hook
++ __conda_setup='export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ '[' 0 -eq 0 ']'
++ eval 'export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
+++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ dirname /home/yfguo/miniconda3/bin
+++ PATH=/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
+++ conda activate base
+++ local cmd=activate
+++ case "$cmd" in
+++ __conda_activate activate base
+++ '[' -n '' ']'
+++ local ask_conda
++++ PS1=
++++ __conda_exe shell.posix activate base
++++ __add_sys_prefix_to_path
++++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ SYSP=/home/yfguo/miniconda3/bin
+++++ dirname /home/yfguo/miniconda3/bin
++++ SYSP=/home/yfguo/miniconda3
++++ '[' -n '' ']'
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export PATH
++++ /home/yfguo/miniconda3/bin/conda shell.posix activate base
+++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+++ eval 'PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++++ PS1='(base) '
++++ export PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export CONDA_PREFIX=/home/yfguo/miniconda3
++++ CONDA_PREFIX=/home/yfguo/miniconda3
++++ export CONDA_SHLVL=1
++++ CONDA_SHLVL=1
++++ export CONDA_DEFAULT_ENV=base
++++ CONDA_DEFAULT_ENV=base
++++ export 'CONDA_PROMPT_MODIFIER=(base) '
++++ CONDA_PROMPT_MODIFIER='(base) '
++++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ export _CE_M=
++++ _CE_M=
++++ export _CE_CONDA=
++++ _CE_CONDA=
++++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ __conda_hashr
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ hash -r
++ unset __conda_setup
+ conda activate Trans_base
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate Trans_base
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate Trans_base
++ __add_sys_prefix_to_path
++ '[' -n '' ']'
+++ dirname /home/yfguo/miniconda3/bin/conda
++ SYSP=/home/yfguo/miniconda3/bin
+++ dirname /home/yfguo/miniconda3/bin
++ SYSP=/home/yfguo/miniconda3
++ '[' -n '' ']'
++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export PATH
++ /home/yfguo/miniconda3/bin/conda shell.posix activate Trans_base
+ ask_conda='PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\'''
+ eval 'PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\'''
++ PS1='(Trans_base) '
++ export PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=Trans_base
++ CONDA_DEFAULT_ENV=Trans_base
++ export 'CONDA_PROMPT_MODIFIER=(Trans_base) '
++ CONDA_PROMPT_MODIFIER='(Trans_base) '
++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ export CONDA_PREFIX_1=/home/yfguo/miniconda3
++ CONDA_PREFIX_1=/home/yfguo/miniconda3
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python train_distill.py
Design models with seed: 666666
Load steacher model from: /home/yfguo/transformer_For_distill/Trans_for_distill/expm/wmt16cache/rs/std/daoshu/avg.h5
load student model from: /home/yfguo/transformer_For_distill/Trans_for_distill/expm/wmt16cache/rs/std/base/avg.h5
Init lr: 1e-05, Dev Loss/Error: 4.698 31.94

Session terminated, killing shell...+ source /home/yfguo/scripts/init_conda.sh
+++ /home/yfguo/miniconda3/bin/conda shell.bash hook
++ __conda_setup='export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
++ '[' 0 -eq 0 ']'
++ eval 'export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''

# Copyright (C) 2012 Anaconda, Inc
# SPDX-License-Identifier: BSD-3-Clause

__add_sys_prefix_to_path() {
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}")
    else
        SYSP=$(\dirname "${CONDA_EXE}")
        SYSP=$(\dirname "${SYSP}")
    fi

    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}"
        PATH="${SYSP}/Scripts:${PATH}"
        PATH="${SYSP}/Library/bin:${PATH}"
        PATH="${SYSP}/Library/usr/bin:${PATH}"
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}"
        PATH="${SYSP}:${PATH}"
    else
        PATH="${SYSP}/bin:${PATH}"
    fi
    \export PATH
}

__conda_exe() (
    __add_sys_prefix_to_path
    "$CONDA_EXE" $_CE_M $_CE_CONDA "$@"
)

__conda_hashr() {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash
    elif [ -n "${POSH_VERSION:+x}" ]; then
        :  # pass
    else
        \hash -r
    fi
}

__conda_activate() {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        # Handle transition from shell activated with conda <= 4.3 to a subsequent activation
        # after conda updated to >= 4.4. See issue #6173.
        PS1="$CONDA_PS1_BACKUP"
        \unset CONDA_PS1_BACKUP
    fi
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix "$@")" || \return
    \eval "$ask_conda"
    __conda_hashr
}

__conda_reactivate() {
    \local ask_conda
    ask_conda="$(PS1="${PS1:-}" __conda_exe shell.posix reactivate)" || \return
    \eval "$ask_conda"
    __conda_hashr
}

conda() {
    \local cmd="${1-__missing__}"
    case "$cmd" in
        activate|deactivate)
            __conda_activate "$@"
            ;;
        install|update|upgrade|remove|uninstall)
            __conda_exe "$@" || \return
            __conda_reactivate
            ;;
        *)
            __conda_exe "$@"
            ;;
    esac
}

if [ -z "${CONDA_SHLVL+x}" ]; then
    \export CONDA_SHLVL=0
    # In dev-mode CONDA_EXE is python.exe and on Windows
    # it is in a different relative location to condabin.
    if [ -n "${_CE_CONDA:+x}" ] && [ -n "${WINDIR+x}" ]; then
        PATH="$(\dirname "$CONDA_EXE")/condabin${PATH:+":${PATH}"}"
    else
        PATH="$(\dirname "$(\dirname "$CONDA_EXE")")/condabin${PATH:+":${PATH}"}"
    fi
    \export PATH

    # We'\''re not allowing PS1 to be unbound. It must at least be set.
    # However, we'\''re not exporting it, which can cause problems when starting a second shell
    # via a first shell (i.e. starting zsh from bash).
    if [ -z "${PS1+x}" ]; then
        PS1=
    fi
fi

conda activate base'
+++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ dirname /home/yfguo/miniconda3/bin
+++ PATH=/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
+++ conda activate base
+++ local cmd=activate
+++ case "$cmd" in
+++ __conda_activate activate base
+++ '[' -n '' ']'
+++ local ask_conda
++++ PS1=
++++ __conda_exe shell.posix activate base
++++ __add_sys_prefix_to_path
++++ '[' -n '' ']'
+++++ dirname /home/yfguo/miniconda3/bin/conda
++++ SYSP=/home/yfguo/miniconda3/bin
+++++ dirname /home/yfguo/miniconda3/bin
++++ SYSP=/home/yfguo/miniconda3
++++ '[' -n '' ']'
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export PATH
++++ /home/yfguo/miniconda3/bin/conda shell.posix activate base
+++ ask_conda='PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
+++ eval 'PS1='\''(base) '\''
export PATH='\''/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\'''
++++ PS1='(base) '
++++ export PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++++ export CONDA_PREFIX=/home/yfguo/miniconda3
++++ CONDA_PREFIX=/home/yfguo/miniconda3
++++ export CONDA_SHLVL=1
++++ CONDA_SHLVL=1
++++ export CONDA_DEFAULT_ENV=base
++++ CONDA_DEFAULT_ENV=base
++++ export 'CONDA_PROMPT_MODIFIER=(base) '
++++ CONDA_PROMPT_MODIFIER='(base) '
++++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++++ export _CE_M=
++++ _CE_M=
++++ export _CE_CONDA=
++++ _CE_CONDA=
++++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
+++ __conda_hashr
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ hash -r
++ unset __conda_setup
+ conda activate Trans_base
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate Trans_base
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate Trans_base
++ __add_sys_prefix_to_path
++ '[' -n '' ']'
+++ dirname /home/yfguo/miniconda3/bin/conda
++ SYSP=/home/yfguo/miniconda3/bin
+++ dirname /home/yfguo/miniconda3/bin
++ SYSP=/home/yfguo/miniconda3
++ '[' -n '' ']'
++ PATH=/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export PATH
++ /home/yfguo/miniconda3/bin/conda shell.posix activate Trans_base
+ ask_conda='PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\'''
+ eval 'PS1='\''(Trans_base) '\''
export PATH='\''/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'\''
export CONDA_PREFIX='\''/home/yfguo/miniconda3/envs/Trans_base'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''Trans_base'\''
export CONDA_PROMPT_MODIFIER='\''(Trans_base) '\''
export CONDA_EXE='\''/home/yfguo/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/home/yfguo/miniconda3/bin/python'\''
export CONDA_PREFIX_1='\''/home/yfguo/miniconda3'\'''
++ PS1='(Trans_base) '
++ export PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ PATH=/home/yfguo/miniconda3/envs/Trans_base/bin:/home/yfguo/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
++ export CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ CONDA_PREFIX=/home/yfguo/miniconda3/envs/Trans_base
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=Trans_base
++ CONDA_DEFAULT_ENV=Trans_base
++ export 'CONDA_PROMPT_MODIFIER=(Trans_base) '
++ CONDA_PROMPT_MODIFIER='(Trans_base) '
++ export CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ CONDA_EXE=/home/yfguo/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/home/yfguo/miniconda3/bin/python
++ export CONDA_PREFIX_1=/home/yfguo/miniconda3
++ CONDA_PREFIX_1=/home/yfguo/miniconda3
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python train_distill.py
Design models with seed: 666666
Load steacher model from: /home/yfguo/transformer_For_distill/Trans_for_distill/expm/wmt16cache/rs/std/daoshu/avg.h5
load student model from: /home/yfguo/transformer_For_distill/Trans_for_distill/expm/wmt16cache/rs/std/base/avg.h5
Init lr: 1e-05, Dev Loss/Error: 4.698 31.94
Average loss over 10514554 tokens: 3.197, valid loss/error: 4.389 31.97
New best model saved
Average loss over 10542484 tokens: 3.175, valid loss/error: 4.280 31.94
New best model saved
Average loss over 10525216 tokens: 3.139, valid loss/error: 4.038 31.89
New best model saved
Average loss over 10529901 tokens: 3.125, valid loss/error: 3.788 31.95
New best model saved
Average loss over 10570728 tokens: 3.110, valid loss/error: 3.518 31.88
New best model saved
Average loss over 10514814 tokens: 3.108, valid loss/error: 3.286 31.88
New best model saved
Average loss over 10539634 tokens: 3.094, valid loss/error: 3.126 31.89
New best model saved
Average loss over 10503578 tokens: 3.100, valid loss/error: 3.064 31.91
New best model saved
Average loss over 10571137 tokens: 3.091, valid loss/error: 3.052 31.91
New best model saved
Average loss over 10538922 tokens: 3.077, valid loss/error: 3.054 31.93
Average loss over 10544082 tokens: 3.085, valid loss/error: 3.053 31.89
Average loss over 10529841 tokens: 3.069, valid loss/error: 3.054 31.91
Average loss over 10532225 tokens: 3.077, valid loss/error: 3.053 31.87
New best model saved
Average loss over 2194386 tokens: 3.085
Epoch: 1, train loss: 3.111, valid loss/error: 3.052 31.87
New best model saved
Average loss over 10532181 tokens: 3.079, valid loss/error: 3.050 31.90
New best model saved
Average loss over 10542521 tokens: 3.068, valid loss/error: 3.051 31.92
Average loss over 10542676 tokens: 3.075, valid loss/error: 3.048 31.90
New best model saved
Average loss over 10515587 tokens: 3.075, valid loss/error: 3.044 31.84
New best model saved
Average loss over 10521838 tokens: 3.067, valid loss/error: 3.045 31.85
Average loss over 10526322 tokens: 3.073, valid loss/error: 3.044 31.81
New best model saved
Average loss over 10551403 tokens: 3.066, valid loss/error: 3.045 31.89
Average loss over 10509510 tokens: 3.066, valid loss/error: 3.044 31.84
Average loss over 10527200 tokens: 3.056, valid loss/error: 3.042 31.88
New best model saved
Average loss over 10532204 tokens: 3.068, valid loss/error: 3.042 31.88
Average loss over 10577636 tokens: 3.060, valid loss/error: 3.038 31.84
New best model saved
Average loss over 10536938 tokens: 3.077, valid loss/error: 3.039 31.87
Average loss over 10557140 tokens: 3.061, valid loss/error: 3.040 31.84
Average loss over 2178346 tokens: 3.075
Epoch: 2, train loss: 3.069, valid loss/error: 3.041 31.84
Average loss over 10532558 tokens: 3.069, valid loss/error: 3.038 31.84
Average loss over 10535815 tokens: 3.073, valid loss/error: 3.040 31.85
Average loss over 10534194 tokens: 3.058, valid loss/error: 3.035 31.86
New best model saved
Average loss over 10555879 tokens: 3.069, valid loss/error: 3.037 31.91
Average loss over 10530420 tokens: 3.059, valid loss/error: 3.039 31.92
Average loss over 10541473 tokens: 3.059, valid loss/error: 3.037 31.88
Average loss over 10525632 tokens: 3.044, valid loss/error: 3.034 31.90
New best model saved
Average loss over 10543203 tokens: 3.071, valid loss/error: 3.037 31.89
Average loss over 10510982 tokens: 3.055, valid loss/error: 3.036 31.89
Average loss over 10563056 tokens: 3.065, valid loss/error: 3.034 31.87
New best model saved
Average loss over 10504428 tokens: 3.057, valid loss/error: 3.035 31.83
Average loss over 10540283 tokens: 3.071, valid loss/error: 3.033 31.80
New best model saved
Average loss over 10551454 tokens: 3.067, valid loss/error: 3.030 31.86
New best model saved
Average loss over 2182125 tokens: 3.039
Epoch: 3, train loss: 3.063, valid loss/error: 3.030 31.81
New best model saved
Average loss over 10548993 tokens: 3.053, valid loss/error: 3.030 31.82
New best model saved
Average loss over 10548055 tokens: 3.070, valid loss/error: 3.028 31.87
New best model saved
Average loss over 10537538 tokens: 3.052, valid loss/error: 3.026 31.83
New best model saved
Average loss over 10509044 tokens: 3.036, valid loss/error: 3.031 31.85
Average loss over 10562099 tokens: 3.060, valid loss/error: 3.030 31.87
Average loss over 10548464 tokens: 3.060, valid loss/error: 3.032 31.87
Average loss over 10500812 tokens: 3.070, valid loss/error: 3.029 31.89
Average loss over 10526401 tokens: 3.052, valid loss/error: 3.029 31.80
Average loss over 10527079 tokens: 3.063, valid loss/error: 3.027 31.83
Average loss over 10534535 tokens: 3.075, valid loss/error: 3.025 31.82
New best model saved
Average loss over 10550644 tokens: 3.047, valid loss/error: 3.028 31.85
Average loss over 10554038 tokens: 3.073, valid loss/error: 3.029 31.87
Average loss over 10535805 tokens: 3.064, valid loss/error: 3.022 31.83
New best model saved
Average loss over 2167995 tokens: 3.055
Epoch: 4, train loss: 3.060, valid loss/error: 3.024 31.83
Average loss over 10534161 tokens: 3.053, valid loss/error: 3.026 31.82
Average loss over 10532752 tokens: 3.053, valid loss/error: 3.025 31.86
Average loss over 10522275 tokens: 3.061, valid loss/error: 3.026 31.86
Average loss over 10538424 tokens: 3.048, valid loss/error: 3.026 31.85
Average loss over 10537406 tokens: 3.061, valid loss/error: 3.025 31.90
Average loss over 10539117 tokens: 3.060, valid loss/error: 3.025 31.86
Average loss over 10503822 tokens: 3.066, valid loss/error: 3.025 31.85
Average loss over 10504440 tokens: 3.045, valid loss/error: 3.025 31.87
Average loss over 10532934 tokens: 3.054, valid loss/error: 3.023 31.81
Average loss over 10550931 tokens: 3.065, valid loss/error: 3.020 31.83
New best model saved
Average loss over 10552379 tokens: 3.075, valid loss/error: 3.024 31.84
Average loss over 10525549 tokens: 3.051, valid loss/error: 3.026 31.85
Average loss over 10580579 tokens: 3.072, valid loss/error: 3.023 31.87
Average loss over 2196733 tokens: 3.092
Epoch: 5, train loss: 3.059, valid loss/error: 3.027 31.90
Average loss over 10570501 tokens: 3.070, valid loss/error: 3.022 31.87
Average loss over 10512419 tokens: 3.055, valid loss/error: 3.020 31.83
New best model saved
Average loss over 10539465 tokens: 3.055, valid loss/error: 3.023 31.84
Average loss over 10554404 tokens: 3.048, valid loss/error: 3.020 31.84
Average loss over 10564794 tokens: 3.069, valid loss/error: 3.018 31.81
New best model saved
Average loss over 10515540 tokens: 3.056, valid loss/error: 3.018 31.85
New best model saved
Average loss over 10519021 tokens: 3.047, valid loss/error: 3.022 31.86
Average loss over 10554816 tokens: 3.074, valid loss/error: 3.022 31.84
Average loss over 10560522 tokens: 3.065, valid loss/error: 3.022 31.87
Average loss over 10518115 tokens: 3.062, valid loss/error: 3.020 31.80
Average loss over 10532635 tokens: 3.052, valid loss/error: 3.021 31.82
Average loss over 10488490 tokens: 3.050, valid loss/error: 3.019 31.78
New best model saved
Average loss over 10541039 tokens: 3.060, valid loss/error: 3.019 31.89
Average loss over 2179741 tokens: 3.078
Epoch: 6, train loss: 3.059, valid loss/error: 3.020 31.85
Average loss over 10547068 tokens: 3.069, valid loss/error: 3.019 31.83
Average loss over 10539689 tokens: 3.057, valid loss/error: 3.023 31.84
Average loss over 10514592 tokens: 3.071, valid loss/error: 3.020 31.79
Average loss over 10544132 tokens: 3.070, valid loss/error: 3.019 31.83
Average loss over 10514919 tokens: 3.049, valid loss/error: 3.020 31.81
Average loss over 10495480 tokens: 3.049, valid loss/error: 3.025 31.84
Average loss over 10572283 tokens: 3.061, valid loss/error: 3.025 31.84
Average loss over 10504986 tokens: 3.038, valid loss/error: 3.023 31.78
New best model saved
Average loss over 10556673 tokens: 3.075, valid loss/error: 3.023 31.82
Average loss over 10498253 tokens: 3.053, valid loss/error: 3.023 31.83
Average loss over 10573796 tokens: 3.066, valid loss/error: 3.020 31.85
Average loss over 10562270 tokens: 3.050, valid loss/error: 3.022 31.80
Average loss over 10520916 tokens: 3.052, valid loss/error: 3.018 31.83
Average loss over 2206445 tokens: 3.100
Epoch: 7, train loss: 3.059, valid loss/error: 3.021 31.85
Average loss over 10550220 tokens: 3.072, valid loss/error: 3.017 31.82
New best model saved
Average loss over 10561239 tokens: 3.067, valid loss/error: 3.019 31.79
Average loss over 10537947 tokens: 3.054, valid loss/error: 3.021 31.80
Average loss over 10562825 tokens: 3.056, valid loss/error: 3.021 31.79
Average loss over 10537692 tokens: 3.044, valid loss/error: 3.020 31.77
New best model saved
Average loss over 10489534 tokens: 3.061, valid loss/error: 3.022 31.80
Average loss over 10548543 tokens: 3.059, valid loss/error: 3.021 31.81
Average loss over 10491368 tokens: 3.050, valid loss/error: 3.021 31.81
Average loss over 10515385 tokens: 3.053, valid loss/error: 3.017 31.81
New best model saved
Average loss over 10569330 tokens: 3.066, valid loss/error: 3.025 31.88
Average loss over 10532880 tokens: 3.068, valid loss/error: 3.021 31.85
Average loss over 10518114 tokens: 3.059, valid loss/error: 3.016 31.81
New best model saved
Average loss over 10552673 tokens: 3.067, valid loss/error: 3.022 31.81
Average loss over 2183752 tokens: 3.067
Epoch: 8, train loss: 3.060, valid loss/error: 3.024 31.82
Average loss over 10520702 tokens: 3.056, valid loss/error: 3.018 31.86
Average loss over 10513407 tokens: 3.062, valid loss/error: 3.017 31.87
Average loss over 10522290 tokens: 3.060, valid loss/error: 3.018 31.84
Average loss over 10483856 tokens: 3.036, valid loss/error: 3.019 31.83
Average loss over 10557326 tokens: 3.055, valid loss/error: 3.020 31.82
Average loss over 10562485 tokens: 3.046, valid loss/error: 3.021 31.82
Average loss over 10522737 tokens: 3.074, valid loss/error: 3.016 31.83
Average loss over 10541996 tokens: 3.066, valid loss/error: 3.021 31.82
Average loss over 10523503 tokens: 3.053, valid loss/error: 3.018 31.81
Average loss over 10514678 tokens: 3.053, valid loss/error: 3.023 31.82
Average loss over 10567100 tokens: 3.081, valid loss/error: 3.020 31.78
Average loss over 10557642 tokens: 3.078, valid loss/error: 3.021 31.83
Average loss over 10561295 tokens: 3.066, valid loss/error: 3.015 31.82
New best model saved
Average loss over 2202485 tokens: 3.069
Epoch: 9, train loss: 3.061, valid loss/error: 3.017 31.86
Average loss over 10485903 tokens: 3.059, valid loss/error: 3.023 31.81
Average loss over 10610425 tokens: 3.053, valid loss/error: 3.018 31.81
Average loss over 10514724 tokens: 3.053, valid loss/error: 3.016 31.82
Average loss over 10518084 tokens: 3.061, valid loss/error: 3.014 31.82
New best model saved
Average loss over 10559266 tokens: 3.052, valid loss/error: 3.016 31.79
Average loss over 10522231 tokens: 3.083, valid loss/error: 3.020 31.87
Average loss over 10511142 tokens: 3.050, valid loss/error: 3.014 31.85
New best model saved
Average loss over 10543166 tokens: 3.050, valid loss/error: 3.021 31.84
Average loss over 10559159 tokens: 3.070, valid loss/error: 3.015 31.85
Average loss over 10518971 tokens: 3.059, valid loss/error: 3.015 31.83
Average loss over 10536121 tokens: 3.071, valid loss/error: 3.017 31.81
Average loss over 10552138 tokens: 3.076, valid loss/error: 3.015 31.86
Average loss over 10520134 tokens: 3.069, valid loss/error: 3.017 31.82
Average loss over 2200038 tokens: 3.078
Epoch: 10, train loss: 3.062, valid loss/error: 3.017 31.84
Average loss over 10519700 tokens: 3.062, valid loss/error: 3.013 31.78
New best model saved
Average loss over 10540267 tokens: 3.078, valid loss/error: 3.014 31.80
Average loss over 10545415 tokens: 3.058, valid loss/error: 3.015 31.83
Average loss over 10532810 tokens: 3.054, valid loss/error: 3.012 31.80
New best model saved
Average loss over 10542855 tokens: 3.055, valid loss/error: 3.018 31.86
Average loss over 10542633 tokens: 3.064, valid loss/error: 3.014 31.86
Average loss over 10522376 tokens: 3.059, valid loss/error: 3.014 31.81
Average loss over 10513569 tokens: 3.063, valid loss/error: 3.015 31.87
Average loss over 10518101 tokens: 3.059, valid loss/error: 3.014 31.85
Average loss over 10538316 tokens: 3.062, valid loss/error: 3.014 31.85
Average loss over 10563040 tokens: 3.076, valid loss/error: 3.015 31.84
Average loss over 10551302 tokens: 3.053, valid loss/error: 3.018 31.87
Average loss over 10531075 tokens: 3.080, valid loss/error: 3.016 31.87
Average loss over 2190043 tokens: 3.051
Epoch: 11, train loss: 3.063, valid loss/error: 3.015 31.86
Average loss over 10540010 tokens: 3.060, valid loss/error: 3.015 31.82
Average loss over 10523058 tokens: 3.053, valid loss/error: 3.015 31.82
Average loss over 10533857 tokens: 3.063, valid loss/error: 3.012 31.80
Average loss over 10555283 tokens: 3.053, valid loss/error: 3.015 31.84
Average loss over 10557713 tokens: 3.079, valid loss/error: 3.014 31.85
Average loss over 10529376 tokens: 3.064, valid loss/error: 3.015 31.84
Average loss over 10512551 tokens: 3.063, valid loss/error: 3.013 31.83
Average loss over 10539058 tokens: 3.074, valid loss/error: 3.012 31.83
Average loss over 10523644 tokens: 3.059, valid loss/error: 3.013 31.82
Average loss over 10554632 tokens: 3.077, valid loss/error: 3.013 31.83
Average loss over 10521472 tokens: 3.050, valid loss/error: 3.012 31.81
New best model saved
Average loss over 10549649 tokens: 3.065, valid loss/error: 3.013 31.83
Average loss over 10538062 tokens: 3.075, valid loss/error: 3.014 31.82
Average loss over 2173137 tokens: 3.054
Epoch: 12, train loss: 3.064, valid loss/error: 3.015 31.87
Average loss over 10498911 tokens: 3.044, valid loss/error: 3.017 31.83
Average loss over 10535902 tokens: 3.045, valid loss/error: 3.018 31.85
Average loss over 10529825 tokens: 3.049, valid loss/error: 3.015 31.86
Average loss over 10532156 tokens: 3.056, valid loss/error: 3.016 31.82
Average loss over 10516016 tokens: 3.047, valid loss/error: 3.019 31.91
Average loss over 10544420 tokens: 3.084, valid loss/error: 3.018 31.84
Average loss over 10558450 tokens: 3.079, valid loss/error: 3.021 31.84
Average loss over 10514659 tokens: 3.084, valid loss/error: 3.015 31.84
Average loss over 10598891 tokens: 3.097, valid loss/error: 3.015 31.83
Average loss over 10544780 tokens: 3.078, valid loss/error: 3.016 31.81
Average loss over 10501363 tokens: 3.079, valid loss/error: 3.013 31.84
Average loss over 10568466 tokens: 3.068, valid loss/error: 3.013 31.84
Average loss over 10515323 tokens: 3.060, valid loss/error: 3.014 31.84
Average loss over 2192340 tokens: 3.033
Epoch: 13, train loss: 3.067, valid loss/error: 3.013 31.80
Average loss over 10533355 tokens: 3.067, valid loss/error: 3.015 31.87
Average loss over 10528381 tokens: 3.050, valid loss/error: 3.014 31.84
Average loss over 10536104 tokens: 3.051, valid loss/error: 3.016 31.83
Average loss over 10523951 tokens: 3.060, valid loss/error: 3.015 31.84
Average loss over 10545931 tokens: 3.074, valid loss/error: 3.011 31.87
New best model saved
Average loss over 10497361 tokens: 3.072, valid loss/error: 3.014 31.86
Average loss over 10543211 tokens: 3.076, valid loss/error: 3.016 31.88
Average loss over 10558850 tokens: 3.071, valid loss/error: 3.014 31.86
Average loss over 10549107 tokens: 3.071, valid loss/error: 3.014 31.89
Average loss over 10531202 tokens: 3.061, valid loss/error: 3.014 31.83
Average loss over 10537833 tokens: 3.087, valid loss/error: 3.013 31.87
Average loss over 10515488 tokens: 3.060, valid loss/error: 3.015 31.82
Average loss over 10562849 tokens: 3.081, valid loss/error: 3.014 31.81
Average loss over 2187879 tokens: 3.061
Epoch: 14, train loss: 3.068, valid loss/error: 3.015 31.81
Average loss over 10569721 tokens: 3.070, valid loss/error: 3.013 31.76
New best model saved
Average loss over 10562206 tokens: 3.079, valid loss/error: 3.019 31.91
Average loss over 10528834 tokens: 3.051, valid loss/error: 3.013 31.79
Average loss over 10520753 tokens: 3.063, valid loss/error: 3.017 31.82
Average loss over 10539881 tokens: 3.056, valid loss/error: 3.016 31.84
Average loss over 10513146 tokens: 3.082, valid loss/error: 3.017 31.85
Average loss over 10524616 tokens: 3.078, valid loss/error: 3.017 31.87
Average loss over 10543829 tokens: 3.070, valid loss/error: 3.014 31.83
Average loss over 10505396 tokens: 3.050, valid loss/error: 3.022 31.79
Average loss over 10528326 tokens: 3.080, valid loss/error: 3.017 31.84
Average loss over 10518618 tokens: 3.071, valid loss/error: 3.017 31.86
Average loss over 10542167 tokens: 3.077, valid loss/error: 3.022 31.86
Average loss over 10552731 tokens: 3.065, valid loss/error: 3.019 31.86
Average loss over 2201278 tokens: 3.101
Epoch: 15, train loss: 3.069, valid loss/error: 3.015 31.85
Average loss over 10515433 tokens: 3.054, valid loss/error: 3.017 31.89
Average loss over 10511218 tokens: 3.068, valid loss/error: 3.015 31.87
Average loss over 10553305 tokens: 3.075, valid loss/error: 3.015 31.82
Average loss over 10531191 tokens: 3.067, valid loss/error: 3.015 31.87
Average loss over 10529572 tokens: 3.073, valid loss/error: 3.016 31.88
Average loss over 10561068 tokens: 3.072, valid loss/error: 3.018 31.88
Average loss over 10567158 tokens: 3.073, valid loss/error: 3.013 31.82
Average loss over 10526141 tokens: 3.063, valid loss/error: 3.016 31.85
Average loss over 10501530 tokens: 3.056, valid loss/error: 3.019 31.88
Average loss over 10539476 tokens: 3.070, valid loss/error: 3.014 31.86
Average loss over 10546228 tokens: 3.067, valid loss/error: 3.015 31.84
Average loss over 10559984 tokens: 3.093, valid loss/error: 3.018 31.88
Average loss over 10530801 tokens: 3.091, valid loss/error: 3.016 31.86
Average loss over 2178397 tokens: 3.065
Epoch: 16, train loss: 3.071, valid loss/error: 3.016 31.90
Average loss over 10519218 tokens: 3.069, valid loss/error: 3.016 31.90
Average loss over 10513050 tokens: 3.051, valid loss/error: 3.015 31.87
Average loss over 10519340 tokens: 3.058, valid loss/error: 3.015 31.82
Average loss over 10543656 tokens: 3.075, valid loss/error: 3.016 31.90
Average loss over 10530128 tokens: 3.083, valid loss/error: 3.018 31.88
Average loss over 10563845 tokens: 3.069, valid loss/error: 3.015 31.85
Average loss over 10530178 tokens: 3.043, valid loss/error: 3.017 31.83
Average loss over 10531208 tokens: 3.076, valid loss/error: 3.016 31.82
Average loss over 10540486 tokens: 3.076, valid loss/error: 3.021 31.88
Average loss over 10569008 tokens: 3.081, valid loss/error: 3.016 31.83
Average loss over 10494969 tokens: 3.083, valid loss/error: 3.018 31.85
Average loss over 10545409 tokens: 3.087, valid loss/error: 3.018 31.82
Average loss over 10551981 tokens: 3.084, valid loss/error: 3.013 31.88
Average loss over 2199026 tokens: 3.097
Epoch: 17, train loss: 3.072, valid loss/error: 3.019 31.86
Average loss over 10529836 tokens: 3.071, valid loss/error: 3.018 31.84
Average loss over 10582938 tokens: 3.090, valid loss/error: 3.017 31.89
Average loss over 10537764 tokens: 3.071, valid loss/error: 3.017 31.87
Average loss over 10543262 tokens: 3.063, valid loss/error: 3.018 31.87
Average loss over 10554661 tokens: 3.076, valid loss/error: 3.015 31.89
Average loss over 10552035 tokens: 3.074, valid loss/error: 3.014 31.90
Average loss over 10501601 tokens: 3.083, valid loss/error: 3.016 31.93
Average loss over 10544647 tokens: 3.076, valid loss/error: 3.013 31.88
Average loss over 10568824 tokens: 3.076, valid loss/error: 3.012 31.96
Average loss over 10501888 tokens: 3.061, valid loss/error: 3.017 31.90
Average loss over 10530533 tokens: 3.076, valid loss/error: 3.016 31.86
Average loss over 10517233 tokens: 3.072, valid loss/error: 3.013 31.90
Average loss over 10507610 tokens: 3.070, valid loss/error: 3.015 31.90
Average loss over 2178670 tokens: 3.045
Epoch: 18, train loss: 3.073, valid loss/error: 3.019 31.91
Average loss over 10504097 tokens: 3.052, valid loss/error: 3.015 31.88
Average loss over 10504706 tokens: 3.062, valid loss/error: 3.018 31.91
Average loss over 10524003 tokens: 3.071, valid loss/error: 3.018 31.89
Average loss over 10563768 tokens: 3.068, valid loss/error: 3.015 31.90
Average loss over 10521993 tokens: 3.075, valid loss/error: 3.015 31.88
Average loss over 10534940 tokens: 3.077, valid loss/error: 3.016 31.90
Average loss over 10561417 tokens: 3.091, valid loss/error: 3.015 31.89
Average loss over 10510120 tokens: 3.088, valid loss/error: 3.015 31.93
Average loss over 10539332 tokens: 3.075, valid loss/error: 3.014 31.89
Average loss over 6872272 tokens: 3.079
Epoch: 19, train loss: 3.074, valid loss/error: 3.014 31.89
Last training step reached
model saved
